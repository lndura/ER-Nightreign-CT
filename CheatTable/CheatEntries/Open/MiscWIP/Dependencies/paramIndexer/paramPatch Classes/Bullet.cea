{$lua}
if syntaxcheck then return end
[enable]
Bullet = {}
function Bullet:new(id_or_all, patchName)
    return paramPatcher(self, "Bullet", 0x150, id_or_all, patchName)
end

function Bullet:setAtkId_Bullet(value)
    return self:setU32(0x00, value)
end
function Bullet:getAtkId_Bullet()
    return self:getU32(0x00)
end

function Bullet:setSfxId_Bullet(value)
    return self:setU32(0x04, value)
end
function Bullet:getSfxId_Bullet(value)
    return self:getU32(0x04, value)
end

function Bullet:setSfxId_Hit(value)
    return self:setU32(0x08, value)
end
function Bullet:getSfxId_Hit(value)
    return self:getU32(0x08, value)
end

function Bullet:setSfxId_Flick(value)
    return self:setU32(0x0C, value)
end
function Bullet:getSfxId_Flick(value)
    return self:getU32(0x0C, value)
end

function Bullet:setLife(value)
    return self:setF32(0x10, value)
end
function Bullet:getLife(value)
    return self:getF32(0x10, value)
end

function Bullet:setDist(value)
    return self:setF32(0x14, value)
end
function Bullet:getDist(value)
    return self:getF32(0x14, value)
end

function Bullet:setShootInterval(value)
    return self:setF32(0x18, value)
end
function Bullet:getShootInterval(value)
    return self:getF32(0x18, value)
end

function Bullet:setGravityInRange(value)
    return self:setF32(0x1C, value)
end
function Bullet:getGravityInRange(value)
    return self:getF32(0x1C, value)
end

function Bullet:setGravityOutRange(value)
    return self:setF32(0x20, value)
end
function Bullet:getGravityOutRange(value)
    return self:getF32(0x20, value)
end

function Bullet:setHormingStopRange(value)
    return self:setF32(0x24, value)
end
function Bullet:getHormingStopRange(value)
    return self:getF32(0x24, value)
end

function Bullet:setInitVellocity(value)
    return self:setF32(0x28, value)
end
function Bullet:getInitVellocity(value)
    return self:getF32(0x28, value)
end

function Bullet:setAccelInRange(value)
    return self:setF32(0x2C, value)
end
function Bullet:getAccelInRange(value)
    return self:getF32(0x2C, value)
end

function Bullet:setAccelOutRange(value)
    return self:setF32(0x30, value)
end
function Bullet:getAccelOutRange(value)
    return self:getF32(0x30, value)
end

function Bullet:setMaxVellocity(value)
    return self:setF32(0x34, value)
end
function Bullet:getMaxVellocity(value)
    return self:getF32(0x34, value)
end

function Bullet:setMinVellocity(value)
    return self:setF32(0x38, value)
end
function Bullet:getMinVellocity(value)
    return self:getF32(0x38, value)
end

function Bullet:setAccelTime(value)
    return self:setF32(0x3C, value)
end
function Bullet:getAccelTime(value)
    return self:getF32(0x3C, value)
end

function Bullet:setHomingBeginDist(value)
    return self:setF32(0x40, value)
end
function Bullet:getHomingBeginDist(value)
    return self:getF32(0x40, value)
end

function Bullet:setHitRadius(value)
    return self:setF32(0x44, value)
end
function Bullet:getHitRadius(value)
    return self:getF32(0x44, value)
end

function Bullet:setHitRadiusMax(value)
    return self:setF32(0x48, value)
end
function Bullet:getHitRadiusMax(value)
    return self:getF32(0x48, value)
end

function Bullet:setSpreadTime(value)
    return self:setF32(0x4C, value)
end
function Bullet:getSpreadTime(value)
    return self:getF32(0x4C, value)
end

function Bullet:setExpDelay(value)
    return self:setF32(0x50, value)
end
function Bullet:getExpDelay(value)
    return self:getF32(0x50, value)
end

function Bullet:setHormingOffsetRange(value)
    return self:setF32(0x54, value)
end
function Bullet:getHormingOffsetRange(value)
    return self:getF32(0x54, value)
end

function Bullet:setDmgHitRecordLifeTime(value)
    return self:setF32(0x58, value)
end
function Bullet:getDmgHitRecordLifeTime(value)
    return self:getF32(0x58, value)
end

function Bullet:setExternalForce(value)
    return self:setF32(0x5C, value)
end
function Bullet:getExternalForce(value)
    return self:getF32(0x5C, value)
end

function Bullet:setSpEffectIDForShooter(value)
    return self:setU32(0x60, value)
end
function Bullet:getSpEffectIDForShooter(value)
    return self:getU32(0x60, value)
end

function Bullet:setAutoSearchNPCThinkID(value)
    return self:setU32(0x64, value)
end
function Bullet:getAutoSearchNPCThinkID(value)
    return self:getU32(0x64, value)
end

function Bullet:setHitBulletID(value)
    return self:setU32(0x68, value)
end
function Bullet:getHitBulletID(value)
    return self:getU32(0x68, value)
end

function Bullet:setSpEffectId0(value)
    return self:setU32(0x6C, value)
end
function Bullet:getSpEffectId0(value)
    return self:getU32(0x6C, value)
end

function Bullet:setSpEffectId1(value)
    return self:setU32(0x70, value)
end
function Bullet:getSpEffectId1(value)
    return self:getU32(0x70, value)
end

function Bullet:setSpEffectId2(value)
    return self:setU32(0x74, value)
end
function Bullet:getSpEffectId2(value)
    return self:getU32(0x74, value)
end

function Bullet:setSpEffectId3(value)
    return self:setU32(0x78, value)
end
function Bullet:getSpEffectId3(value)
    return self:getU32(0x78, value)
end

function Bullet:setSpEffectId4(value)
    return self:setU32(0x7C, value)
end
function Bullet:getSpEffectId4(value)
    return self:getU32(0x7C, value)
end

function Bullet:setNumShoot(value)
    return self:setU16(0x80, value)
end
function Bullet:getNumShoot(value)
    return self:getU16(0x80, value)
end

function Bullet:setHomingAngle(value)
    return self:setU16(0x82, value)
end
function Bullet:getHomingAngle(value)
    return self:getU16(0x82, value)
end

function Bullet:setShootAngle(value)
    return self:setU16(0x84, value)
end
function Bullet:getShootAngle(value)
    return self:getU16(0x84, value)
end

function Bullet:setShootAngleInterval(value)
    return self:setU16(0x86, value)
end
function Bullet:getShootAngleInterval(value)
    return self:getU16(0x86, value)
end

function Bullet:setShootAngleXInterval(value)
    return self:setU16(0x88, value)
end
function Bullet:getShootAngleXInterval(value)
    return self:getU16(0x88, value)
end

function Bullet:setDamageDamp(value)
    return self:setU8(0x8A, value)
end
function Bullet:getDamageDamp(value)
    return self:getU8(0x8A, value)
end

function Bullet:setSpelDamageDamp(value)
    return self:setU8(0x8B, value)
end
function Bullet:getSpelDamageDamp(value)
    return self:getU8(0x8B, value)
end

function Bullet:setFireDamageDamp(value)
    return self:setU8(0x8C, value)
end
function Bullet:getFireDamageDamp(value)
    return self:getU8(0x8C, value)
end

function Bullet:setThunderDamageDamp(value)
    return self:setU8(0x8D, value)
end
function Bullet:getThunderDamageDamp(value)
    return self:getU8(0x8D, value)
end

function Bullet:setStaminaDamp(value)
    return self:setU8(0x8E, value)
end
function Bullet:getStaminaDamp(value)
    return self:getU8(0x8E, value)
end

function Bullet:setKnockbackDamp(value)
    return self:setU8(0x8F, value)
end
function Bullet:getKnockbackDamp(value)
    return self:getU8(0x8F, value)
end

function Bullet:setShootAngleXZ(value)
    return self:setU8(0x90, value)
end
function Bullet:getShootAngleXZ(value)
    return self:getU8(0x90, value)
end

function Bullet:setLockShootLimitAng(value)
    return self:setU8(0x91, value)
end
function Bullet:getLockShootLimitAng(value)
    return self:getU8(0x91, value)
end

--dummy8 pad2[1]

function Bullet:setPrevVelocityDirRate(value)
    return self:setU8(0x93, value)
end
function Bullet:getPrevVelocityDirRate(value)
    return self:getU8(0x93, value)
end

function Bullet:setAtkAttribute(value)
    return self:setU8(0x94, value)
end
function Bullet:getAtkAttribute(value)
    return self:getU8(0x94, value)
end

function Bullet:setSpAttribute(value)
    return self:setU8(0x95, value)
end
function Bullet:getSpAttribute(value)
    return self:getU8(0x95, value)
end

function Bullet:setMaterial_AttackType(value)
    return self:setU8(0x96, value)
end
function Bullet:getMaterial_AttackType(value)
    return self:getU8(0x96, value)
end

function Bullet:setMaterial_AttackMaterial(value)
    return self:setU8(0x97, value)
end
function Bullet:getMaterial_AttackMaterial(value)
    return self:getU8(0x97, value)
end

function Bullet:setIsPenetrateChr(value)
    return self:setBinary(0x98, 0, value, 1)
end

function Bullet:getIsPenetrateChr()
    return self:getBinary(0x98, 0, value, 1)
end

function Bullet:setIsPenetrateObj(value)
    return self:setBinary(0x98, 1, value, 1)
end

function Bullet:getIsPenetrateObj()
    return self:getBinary(0x98, 1, value, 1)
end

--dummy8 pad_old:6

function Bullet:setMayRemoteDetonate(value)
    return self:setBinary(0x99, 0, value, 1)
end

function Bullet:getMayRemoteDetonate()
    return self:getBinary(0x99, 0, value, 1)
end

--dummy8 pad:5

function Bullet:setLaunchConditionType(value)
    return self:setU8(0x99, value)
end
function Bullet:getLaunchConditionType(value)
    return self:getU8(0x99, value)
end

function Bullet:setFollowType(value)
    return self:setBinary(0x9A, 6, value, 3)
end

function Bullet:getFollowType()
    return self:getBinary(0x9A, 6, value, 3)
end

function Bullet:setEmittePosType(value)
    return self:setBinary(0x9B, 1, value, 3)
end

function Bullet:getEmittePosType()
    return self:getBinary(0x9B, 1, value, 3)
end

function Bullet:setIsAttackSFX(value)
    return self:setBinary(0x9B, 4, value, 1)
end

function Bullet:getIsAttackSFX()
    return self:getBinary(0x9B, 4, value, 1)
end

function Bullet:setIsEndlessHit(value)
    return self:setBinary(0x9B, 5, value, 1)
end

function Bullet:getIsEndlessHit()
    return self:getBinary(0x9B, 5, value, 1)
end

function Bullet:setIsPenetrateMap(value)
    return self:setBinary(0x9B, 6, value, 1)
end

function Bullet:getIsPenetrateMap()
    return self:getBinary(0x9B, 6, value, 1)
end

function Bullet:setIsHitBothTeam(value)
    return self:setBinary(0x9B, 7, value, 1)
end

function Bullet:getIsHitBothTeam()
    return self:getBinary(0x9B, 7, value, 1)
end

function Bullet:setIsUseSharedHitList(value)
    return self:setBinary(0x9C, 0, value, 1)
end

function Bullet:getIsUseSharedHitList()
    return self:getBinary(0x9C, 0, value, 1)
end

function Bullet:setIsUseMultiDmyPolyIfPlace(value)
    return self:setBinary(0x9C, 1, value, 1)
end

function Bullet:getIsUseMultiDmyPolyIfPlace()
    return self:getBinary(0x9C, 1, value, 1)
end

function Bullet:setIsHitOtherBulletForceEraseA(value)
    return self:setBinary(0x9C, 2, value, 1)
end

function Bullet:getIsHitOtherBulletForceEraseA()
    return self:getBinary(0x9C, 2, value, 1)
end

function Bullet:setIsHitOtherBulletForceEraseB(value)
    return self:setBinary(0x9C, 3, value, 1)
end

function Bullet:getIsHitOtherBulletForceEraseB()
    return self:getBinary(0x9C, 3, value, 1)
end

function Bullet:setIsHitForceMagic(value)
    return self:setBinary(0x9C, 4, value, 1)
end

function Bullet:getIsHitForceMagic()
    return self:getBinary(0x9C, 4, value, 1)
end

function Bullet:setIsIgnoreSfxIfHitWater(value)
    return self:setBinary(0x9C, 5, value, 1)
end

function Bullet:getIsIgnoreSfxIfHitWater()
    return self:getBinary(0x9C, 5, value, 1)
end

function Bullet:setIsIgnoreMoveStateIfHitWater(value)
    return self:setBinary(0x9C, 6, value, 1)
end

function Bullet:getIsIgnoreMoveStateIfHitWater()
    return self:getBinary(0x9C, 6, value, 1)
end

function Bullet:setIsHitDarkForceMagic(value)
    return self:setBinary(0x9C, 7, value, 1)
end

function Bullet:getIsHitDarkForceMagic()
    return self:getBinary(0x9C, 7, value, 1)
end

function Bullet:setDmgCalcSide(value)
    return self:setBinary(0x9D, 0, value, 2)
end

function Bullet:getDmgCalcSide()
    return self:getBinary(0x9D, 0, value, 2)
end

function Bullet:setIsEnableAutoHoming(value)
    return self:setBinary(0x9D, 2, value, 1)
end

function Bullet:getIsEnableAutoHoming()
    return self:getBinary(0x9D, 2, value, 1)
end

function Bullet:setIsSyncBulletCulcDumypolyPos(value)
    return self:setBinary(0x9D, 3, value, 1)
end

function Bullet:getIsSyncBulletCulcDumypolyPos()
    return self:getBinary(0x9D, 3, value, 1)
end

function Bullet:setIsOwnerOverrideInitAngle(value)
    return self:setBinary(0x9D, 4, value, 1)
end

function Bullet:getIsOwnerOverrideInitAngle()
    return self:getBinary(0x9D, 4, value, 1)
end

function Bullet:setIsInheritSfxToChild(value)
    return self:setBinary(0x9D, 5, value, 1)
end

function Bullet:getIsInheritSfxToChild()
    return self:getBinary(0x9D, 5, value, 1)
end

function Bullet:setDarkDamageDamp(value)
    return self:setU8(0x9D, value)
end
function Bullet:getDarkDamageDamp(value)
    return self:getU8(0x9D, value)
end

function Bullet:setBulletSfxDeleteType_byHit(value)
    return self:setU8(0x9E, value)
end
function Bullet:getBulletSfxDeleteType_byHit(value)
    return self:getU8(0x9E, value)
end

function Bullet:setBulletSfxDeleteType_byLifeDead(value)
    return self:setU8(0x9F, value)
end
function Bullet:getBulletSfxDeleteType_byLifeDead(value)
    return self:getU8(0x9F, value)
end

function Bullet:setTargetYOffsetRange(value)
    return self:setF32(0xA0, value)
end
function Bullet:getTargetYOffsetRange(value)
    return self:getF32(0xA0, value)
end

function Bullet:setShootAngleYMaxRandom(value)
    return self:setF32(0xA4, value)
end
function Bullet:getShootAngleYMaxRandom(value)
    return self:getF32(0xA4, value)
end

function Bullet:setShootAngleXMaxRandom(value)
    return self:setF32(0xA8, value)
end
function Bullet:getShootAngleXMaxRandom(value)
    return self:getF32(0xA8, value)
end

function Bullet:setIntervalCreateBulletId(value)
    return self:setU32(0xAC, value)
end
function Bullet:getIntervalCreateBulletId(value)
    return self:getU32(0xAC, value)
end

function Bullet:setIntervalCreateTimeMin(value)
    return self:setF32(0xB0, value)
end
function Bullet:getIntervalCreateTimeMin(value)
    return self:getF32(0xB0, value)
end

function Bullet:setIntervalCreateTimeMax(value)
    return self:setF32(0xB4, value)
end
function Bullet:getIntervalCreateTimeMax(value)
    return self:getF32(0xB4, value)
end

function Bullet:setPredictionShootObserveTime(value)
    return self:setF32(0xB8, value)
end
function Bullet:getPredictionShootObserveTime(value)
    return self:getF32(0xB8, value)
end

function Bullet:setIntervalCreateWaitTime(value)
    return self:setF32(0xBC, value)
end
function Bullet:getIntervalCreateWaitTime(value)
    return self:getF32(0xBC, value)
end

function Bullet:setSfxPostureType(value)
    return self:setU8(0xC0, value)
end
function Bullet:getSfxPostureType(value)
    return self:getU8(0xC0, value)
end

function Bullet:setCreateLimitGroupId(value)
    return self:setU8(0xC1, value)
end
function Bullet:getCreateLimitGroupId(value)
    return self:getU8(0xC1, value)
end

--dummy8 pad5[1]

function Bullet:setIsInheritSpeedToChild(value)
    return self:setBinary(0xC3, 6, value, 1)
end

function Bullet:getIsInheritSpeedToChild()
    return self:getBinary(0xC3, 6, value, 1)
end

function Bullet:setIsDisableHitSfx_byChrAndObj(value)
    return self:setBinary(0xC3, 7, value, 1)
end

function Bullet:getIsDisableHitSfx_byChrAndObj()
    return self:getBinary(0xC3, 7, value, 1)
end

function Bullet:setIsCheckWall_byCenterRay(value)
    return self:setBinary(0xC4, 0, value, 1)
end

function Bullet:getIsCheckWall_byCenterRay()
    return self:getBinary(0xC4, 0, value, 1)
end

function Bullet:setIsHitFlare(value)
    return self:setBinary(0xC4, 1, value, 1)
end

function Bullet:getIsHitFlare()
    return self:getBinary(0xC4, 1, value, 1)
end

function Bullet:setIsUseBulletWallFilter(value)
    return self:setBinary(0xC4, 2, value, 1)
end

function Bullet:getIsUseBulletWallFilter()
    return self:getBinary(0xC4, 2, value, 1)
end

--dummy8 pad1:1

function Bullet:setIsDisableAiProjectileDodge(value)
    return self:setBinary(0xC4, 4, value, 1)
end

function Bullet:getIsDisableAiProjectileDodge()
    return self:getBinary(0xC4, 4, value, 1)
end

function Bullet:setIsNonDependenceMagicForFunnleNum(value)
    return self:setBinary(0xC4, 5, value, 1)
end

function Bullet:getIsNonDependenceMagicForFunnleNum()
    return self:getBinary(0xC4, 5, value, 1)
end

function Bullet:setIsAiInterruptShootNoDamageBullet(value)
    return self:setBinary(0xC4, 6, value, 1)
end

function Bullet:getIsAiInterruptShootNoDamageBullet()
    return self:getBinary(0xC4, 6, value, 1)
end

function Bullet:setRandomCreateRadius(value)
    return self:setF32(0xC4, value)
end
function Bullet:getRandomCreateRadius(value)
    return self:getF32(0xC4, value)
end

function Bullet:setFollowOffset_BaseHeight(value)
    return self:setF32(0xC8, value)
end
function Bullet:getFollowOffset_BaseHeight(value)
    return self:getF32(0xC8, value)
end

function Bullet:setAssetNo_Hit(value)
    return self:setU32(0xCC, value)
end
function Bullet:getAssetNo_Hit(value)
    return self:getU32(0xCC, value)
end

function Bullet:setLifeRandomRange(value)
    return self:setF32(0xD0, value)
end
function Bullet:getLifeRandomRange(value)
    return self:getF32(0xD0, value)
end

function Bullet:setHomingAngleX(value)
    return self:setU16(0xD4, value)
end
function Bullet:getHomingAngleX(value)
    return self:getU16(0xD4, value)
end

function Bullet:setBallisticCalcType(value)
    return self:setU8(0xD6, value)
end
function Bullet:getBallisticCalcType(value)
    return self:getU8(0xD6, value)
end

function Bullet:setAttachEffectType(value)
    return self:setU8(0xD7, value)
end
function Bullet:getAttachEffectType(value)
    return self:getU8(0xD7, value)
end

function Bullet:setSeId_Bullet1(value)
    return self:setU32(0xD8, value)
end
function Bullet:getSeId_Bullet1(value)
    return self:getU32(0xD8, value)
end

function Bullet:setSeId_Bullet2(value)
    return self:setU32(0xDC, value)
end
function Bullet:getSeId_Bullet2(value)
    return self:getU32(0xDC, value)
end

function Bullet:setSeId_Hit(value)
    return self:setU32(0xE0, value)
end
function Bullet:getSeId_Hit(value)
    return self:getU32(0xE0, value)
end

function Bullet:setSeId_Flick(value)
    return self:setU32(0xE4, value)
end
function Bullet:getSeId_Flick(value)
    return self:getU32(0xE4, value)
end

function Bullet:setHowitzerShootAngleXMin(value)
    return self:setU16(0xE8, value)
end
function Bullet:getHowitzerShootAngleXMin(value)
    return self:getU16(0xE8, value)
end

function Bullet:setHowitzerShootAngleXMax(value)
    return self:setU16(0xEA, value)
end
function Bullet:getHowitzerShootAngleXMax(value)
    return self:getU16(0xEA, value)
end

function Bullet:setHowitzerInitMinVelocity(value)
    return self:setF32(0xEC, value)
end
function Bullet:getHowitzerInitMinVelocity(value)
    return self:getF32(0xEC, value)
end

function Bullet:setHowitzerInitMaxVelocity(value)
    return self:setF32(0xF0, value)
end
function Bullet:getHowitzerInitMaxVelocity(value)
    return self:getF32(0xF0, value)
end

function Bullet:setSfxId_ForceErase(value)
    return self:setU32(0xF4, value)
end
function Bullet:getSfxId_ForceErase(value)
    return self:getU32(0xF4, value)
end

function Bullet:setBulletSfxDeleteType_byForceErase(value)
    return self:setU8(0xF8, value)
end
function Bullet:getBulletSfxDeleteType_byForceErase(value)
    return self:getU8(0xF8, value)
end

--dummy8 pad3[1]

function Bullet:setFollowDmypoly_forSfxPose(value)
    return self:setU16(0xFA, value)
end
function Bullet:getFollowDmypoly_forSfxPose(value)
    return self:getU16(0xFA, value)
end

function Bullet:setFollowOffset_Radius(value)
    return self:setF32(0xFC, value)
end
function Bullet:getFollowOffset_Radius(value)
    return self:getF32(0xFC, value)
end

function Bullet:setSpBulletDistUpRate(value)
    return self:setF32(0x100, value)
end
function Bullet:getSpBulletDistUpRate(value)
    return self:getF32(0x100, value)
end

function Bullet:setNolockTargetDist(value)
    return self:setF32(0x104, value)
end
function Bullet:getNolockTargetDist(value)
    return self:getF32(0x104, value)
end

function Bullet:setUnknown_1(value)
    return self:setF32(0x108, value)
end
function Bullet:getUnknown_1(value)
    return self:getF32(0x108, value)
end

function Bullet:setUnknown_2(value)
    return self:setF32(0x10C, value)
end
function Bullet:getUnknown_2(value)
    return self:getF32(0x10C, value)
end

function Bullet:setUnknown_3(value)
    return self:setF32(0x110, value)
end
function Bullet:getUnknown_3(value)
    return self:getF32(0x110, value)
end

function Bullet:setUnknown_4(value)
    return self:setF32(0x114, value)
end
function Bullet:getUnknown_4(value)
    return self:getF32(0x114, value)
end

function Bullet:setUnknown_5(value)
    return self:setF32(0x118, value)
end
function Bullet:getUnknown_5(value)
    return self:getF32(0x118, value)
end

function Bullet:setUnknown_6(value)
    return self:setU32(0x11C, value)
end
function Bullet:getUnknown_6(value)
    return self:getU32(0x11C, value)
end

function Bullet:setUnknown_7(value)
    return self:setU32(0x120, value)
end
function Bullet:getUnknown_7(value)
    return self:getU32(0x120, value)
end

function Bullet:setUnknown_8(value)
    return self:setF32(0x124, value)
end
function Bullet:getUnknown_8(value)
    return self:getF32(0x124, value)
end

function Bullet:setUnknown_9(value)
    return self:setF32(0x128, value)
end
function Bullet:getUnknown_9(value)
    return self:getF32(0x128, value)
end

function Bullet:setUnknown_10(value)
    return self:setU32(0x12C, value)
end
function Bullet:getUnknown_10(value)
    return self:getU32(0x12C, value)
end

function Bullet:setUnknown_11(value)
    return self:setF32(0x130, value)
end
function Bullet:getUnknown_11(value)
    return self:getF32(0x130, value)
end

function Bullet:setUnknown_12(value)
    return self:setF32(0x134, value)
end
function Bullet:getUnknown_12(value)
    return self:getF32(0x134, value)
end

function Bullet:setUnknown_13(value)
    return self:setF32(0x138, value)
end
function Bullet:getUnknown_13(value)
    return self:getF32(0x138, value)
end

function Bullet:setUnknown_14(value)
    return self:setF32(0x13C, value)
end
function Bullet:getUnknown_14(value)
    return self:getF32(0x13C, value)
end

function Bullet:setUnknown_15(value)
    return self:setF32(0x140, value)
end
function Bullet:getUnknown_15(value)
    return self:getF32(0x140, value)
end

function Bullet:setUnknown_16(value)
    return self:setF32(0x144, value)
end
function Bullet:getUnknown_16(value)
    return self:getF32(0x144, value)
end

function Bullet:setUnknown_17(value)
    return self:setF32(0x148, value)
end
function Bullet:getUnknown_17(value)
    return self:getF32(0x148, value)
end
[disable]
Bullet = nil
