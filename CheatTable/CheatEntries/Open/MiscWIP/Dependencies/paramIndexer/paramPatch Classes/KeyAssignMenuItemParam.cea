{$lua}
if syntaxcheck then return end
[enable]
KeyAssignMenuItemParam = {}
function KeyAssignMenuItemParam:new(id_or_all, patchName)
    return paramPatcher(self, "KeyAssignMenuItemParam", 0x19, id_or_all, patchName)
end



function KeyAssignMenuItemParam:setTextID(value)
    return self:setU32(0x00, value)
end
function KeyAssignMenuItemParam:getTextID(value)
    return self:getU32(0x00, value)
end

function KeyAssignMenuItemParam:setKey(value)
    return self:setU32(0x04, value)
end
function KeyAssignMenuItemParam:getKey(value)
    return self:getU32(0x04, value)
end

function KeyAssignMenuItemParam:setEnableUnassign(value)
    return self:setU8(0x08, value)
end
function KeyAssignMenuItemParam:getEnableUnassign(value)
    return self:getU8(0x08, value)
end

function KeyAssignMenuItemParam:setEnablePadConfig(value)
    return self:setU8(0x09, value)
end
function KeyAssignMenuItemParam:getEnablePadConfig(value)
    return self:getU8(0x09, value)
end

function KeyAssignMenuItemParam:setEnableMouseConfig(value)
    return self:setU8(0x0A, value)
end
function KeyAssignMenuItemParam:getEnableMouseConfig(value)
    return self:getU8(0x0A, value)
end

function KeyAssignMenuItemParam:setGroup(value)
    return self:setU8(0x0B, value)
end
function KeyAssignMenuItemParam:getGroup(value)
    return self:getU8(0x0B, value)
end

function KeyAssignMenuItemParam:setMappingTextID(value)
    return self:setU32(0x0C, value)
end
function KeyAssignMenuItemParam:getMappingTextID(value)
    return self:getU32(0x0C, value)
end

function KeyAssignMenuItemParam:setViewPad(value)
    return self:setU8(0x10, value)
end
function KeyAssignMenuItemParam:getViewPad(value)
    return self:getU8(0x10, value)
end

function KeyAssignMenuItemParam:setViewKeyboardMouse(value)
    return self:setU8(0x11, value)
end
function KeyAssignMenuItemParam:getViewKeyboardMouse(value)
    return self:getU8(0x11, value)
end

--dummy8 padding[6]
[disable]
KeyAssignMenuItemParam = nil
