{$lua}
if syntaxcheck then return end
[enable]
WorldMapPieceParam = {}
function WorldMapPieceParam:new(id_or_all, patchName)
    return paramPatcher(self, "WorldMapPieceParam", 0x41, id_or_all, patchName)
end



function WorldMapPieceParam:setDisableParam_NT(value)
    return self:setBinary(0x00, 0, value, 1)
end

function WorldMapPieceParam:getDisableParam_NT()
    return self:getBinary(0x00, 0, value, 1)
end

--dummy8 disableParamReserve1:7

--dummy8 disableParamReserve2[3]

function WorldMapPieceParam:setOpenEventFlagId(value)
    return self:setU32(0x04, value)
end
function WorldMapPieceParam:getOpenEventFlagId(value)
    return self:getU32(0x04, value)
end

function WorldMapPieceParam:setOpenTravelAreaLeft(value)
    return self:setF32(0x08, value)
end
function WorldMapPieceParam:getOpenTravelAreaLeft(value)
    return self:getF32(0x08, value)
end

function WorldMapPieceParam:setOpenTravelAreaRight(value)
    return self:setF32(0x0C, value)
end
function WorldMapPieceParam:getOpenTravelAreaRight(value)
    return self:getF32(0x0C, value)
end

function WorldMapPieceParam:setOpenTravelAreaTop(value)
    return self:setF32(0x10, value)
end
function WorldMapPieceParam:getOpenTravelAreaTop(value)
    return self:getF32(0x10, value)
end

function WorldMapPieceParam:setOpenTravelAreaBottom(value)
    return self:setF32(0x14, value)
end
function WorldMapPieceParam:getOpenTravelAreaBottom(value)
    return self:getF32(0x14, value)
end

function WorldMapPieceParam:setAcquisitionEventFlagId(value)
    return self:setU32(0x18, value)
end
function WorldMapPieceParam:getAcquisitionEventFlagId(value)
    return self:getU32(0x18, value)
end

function WorldMapPieceParam:setAcquisitionEventScale(value)
    return self:setF32(0x1C, value)
end
function WorldMapPieceParam:getAcquisitionEventScale(value)
    return self:getF32(0x1C, value)
end

function WorldMapPieceParam:setAcquisitionEventCenterX(value)
    return self:setF32(0x20, value)
end
function WorldMapPieceParam:getAcquisitionEventCenterX(value)
    return self:getF32(0x20, value)
end

function WorldMapPieceParam:setAcquisitionEventCenterY(value)
    return self:setF32(0x24, value)
end
function WorldMapPieceParam:getAcquisitionEventCenterY(value)
    return self:getF32(0x24, value)
end

function WorldMapPieceParam:setAcquisitionEventResScale(value)
    return self:setF32(0x28, value)
end
function WorldMapPieceParam:getAcquisitionEventResScale(value)
    return self:getF32(0x28, value)
end

function WorldMapPieceParam:setAcquisitionEventResOffsetX(value)
    return self:setF32(0x2C, value)
end
function WorldMapPieceParam:getAcquisitionEventResOffsetX(value)
    return self:getF32(0x2C, value)
end

function WorldMapPieceParam:setAcquisitionEventResOffsetY(value)
    return self:setF32(0x30, value)
end
function WorldMapPieceParam:getAcquisitionEventResOffsetY(value)
    return self:getF32(0x30, value)
end

--dummy8 pad[12]
[disable]
WorldMapPieceParam = nil
