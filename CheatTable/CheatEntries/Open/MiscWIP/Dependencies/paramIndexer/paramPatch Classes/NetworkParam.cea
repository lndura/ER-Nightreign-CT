{$lua}
if syntaxcheck then return end
[enable]
NetworkParam = {}
function NetworkParam:new(id_or_all, patchName)
    return paramPatcher(self, "NetworkParam", 0x290, id_or_all, patchName)
end



function NetworkParam:setSignVerticalOffset(value)
    return self:setF32(0x00, value)
end
function NetworkParam:getSignVerticalOffset(value)
    return self:getF32(0x00, value)
end

function NetworkParam:setMaxSignPosCorrectionRange(value)
    return self:setF32(0x04, value)
end
function NetworkParam:getMaxSignPosCorrectionRange(value)
    return self:getF32(0x04, value)
end

function NetworkParam:setSummonTimeoutTime(value)
    return self:setF32(0x08, value)
end
function NetworkParam:getSummonTimeoutTime(value)
    return self:getF32(0x08, value)
end

--dummy8 pad_0[4]

function NetworkParam:setSignPuddleActiveMessageIntervalSec(value)
    return self:setF32(0x10, value)
end
function NetworkParam:getSignPuddleActiveMessageIntervalSec(value)
    return self:getF32(0x10, value)
end

function NetworkParam:setKeyGuideHeight_0(value)
    return self:setF32(0x14, value)
end
function NetworkParam:getKeyGuideHeight_0(value)
    return self:getF32(0x14, value)
end

function NetworkParam:setReloadSignIntervalTime1(value)
    return self:setF32(0x18, value)
end
function NetworkParam:getReloadSignIntervalTime1(value)
    return self:getF32(0x18, value)
end

function NetworkParam:setReloadSignIntervalTime2(value)
    return self:setF32(0x1C, value)
end
function NetworkParam:getReloadSignIntervalTime2(value)
    return self:getF32(0x1C, value)
end

function NetworkParam:setReloadSignTotalCount_0(value)
    return self:setU32(0x20, value)
end
function NetworkParam:getReloadSignTotalCount_0(value)
    return self:getU32(0x20, value)
end

function NetworkParam:setReloadSignCellCount_0(value)
    return self:setU32(0x24, value)
end
function NetworkParam:getReloadSignCellCount_0(value)
    return self:getU32(0x24, value)
end

function NetworkParam:setUpdateSignIntervalTime(value)
    return self:setF32(0x28, value)
end
function NetworkParam:getUpdateSignIntervalTime(value)
    return self:getF32(0x28, value)
end

function NetworkParam:setBasicExclusiveRange_0(value)
    return self:setF32(0x2C, value)
end
function NetworkParam:getBasicExclusiveRange_0(value)
    return self:getF32(0x2C, value)
end

function NetworkParam:setBasicExclusiveHeight_0(value)
    return self:setF32(0x30, value)
end
function NetworkParam:getBasicExclusiveHeight_0(value)
    return self:getF32(0x30, value)
end

function NetworkParam:setPreviewChrWaitingTime(value)
    return self:setF32(0x34, value)
end
function NetworkParam:getPreviewChrWaitingTime(value)
    return self:getF32(0x34, value)
end

function NetworkParam:setSignVisibleRange_0(value)
    return self:setF32(0x38, value)
end
function NetworkParam:getSignVisibleRange_0(value)
    return self:getF32(0x38, value)
end

function NetworkParam:setCellGroupHorizontalRange_0(value)
    return self:setU32(0x3C, value)
end
function NetworkParam:getCellGroupHorizontalRange_0(value)
    return self:getU32(0x3C, value)
end

function NetworkParam:setCellGroupTopRange_0(value)
    return self:setU32(0x40, value)
end
function NetworkParam:getCellGroupTopRange_0(value)
    return self:getU32(0x40, value)
end

function NetworkParam:setCellGroupBottomRange_0(value)
    return self:setU32(0x44, value)
end
function NetworkParam:getCellGroupBottomRange_0(value)
    return self:getU32(0x44, value)
end

function NetworkParam:setMinWhitePhantomLimitTimeScale(value)
    return self:setF32(0x48, value)
end
function NetworkParam:getMinWhitePhantomLimitTimeScale(value)
    return self:getF32(0x48, value)
end

function NetworkParam:setMinSmallPhantomLimitTimeScale(value)
    return self:setF32(0x4C, value)
end
function NetworkParam:getMinSmallPhantomLimitTimeScale(value)
    return self:getF32(0x4C, value)
end

function NetworkParam:setWhiteKeywordLimitTimeScale(value)
    return self:setF32(0x50, value)
end
function NetworkParam:getWhiteKeywordLimitTimeScale(value)
    return self:getF32(0x50, value)
end

function NetworkParam:setSmallKeywordLimitTimeScale(value)
    return self:setF32(0x54, value)
end
function NetworkParam:getSmallKeywordLimitTimeScale(value)
    return self:getF32(0x54, value)
end

function NetworkParam:setBlackKeywordLimitTimeScale(value)
    return self:setF32(0x58, value)
end
function NetworkParam:getBlackKeywordLimitTimeScale(value)
    return self:getF32(0x58, value)
end

function NetworkParam:setDragonKeywordLimitTimeScale(value)
    return self:setF32(0x5C, value)
end
function NetworkParam:getDragonKeywordLimitTimeScale(value)
    return self:getF32(0x5C, value)
end

function NetworkParam:setSingGetMax(value)
    return self:setU32(0x60, value)
end
function NetworkParam:getSingGetMax(value)
    return self:getU32(0x60, value)
end

function NetworkParam:setSignDownloadSpan(value)
    return self:setF32(0x64, value)
end
function NetworkParam:getSignDownloadSpan(value)
    return self:getF32(0x64, value)
end

function NetworkParam:setSignUpdateSpan(value)
    return self:setF32(0x68, value)
end
function NetworkParam:getSignUpdateSpan(value)
    return self:getF32(0x68, value)
end

--dummy8 signPad[4]

function NetworkParam:setMaxBreakInTargetListCount(value)
    return self:setU32(0x70, value)
end
function NetworkParam:getMaxBreakInTargetListCount(value)
    return self:getU32(0x70, value)
end

function NetworkParam:setBreakInRequestIntervalTimeSec(value)
    return self:setF32(0x74, value)
end
function NetworkParam:getBreakInRequestIntervalTimeSec(value)
    return self:getF32(0x74, value)
end

function NetworkParam:setBreakInRequestTimeOutSec(value)
    return self:setF32(0x78, value)
end
function NetworkParam:getBreakInRequestTimeOutSec(value)
    return self:getF32(0x78, value)
end

--dummy8 pad_1_old[4]

function NetworkParam:setBreakInRequestAreaCount(value)
    return self:setU8(0x80, value)
end
function NetworkParam:getBreakInRequestAreaCount(value)
    return self:getU8(0x80, value)
end

--dummy8 pad_1[3]

function NetworkParam:setKeyGuideRange(value)
    return self:setF32(0x84, value)
end
function NetworkParam:getKeyGuideRange(value)
    return self:getF32(0x84, value)
end

function NetworkParam:setKeyGuideHeight_1(value)
    return self:setF32(0x88, value)
end
function NetworkParam:getKeyGuideHeight_1(value)
    return self:getF32(0x88, value)
end

function NetworkParam:setReloadSignTotalCount_1(value)
    return self:setU32(0x8C, value)
end
function NetworkParam:getReloadSignTotalCount_1(value)
    return self:getU32(0x8C, value)
end

function NetworkParam:setReloadNewSignCellCount(value)
    return self:setU32(0x90, value)
end
function NetworkParam:getReloadNewSignCellCount(value)
    return self:getU32(0x90, value)
end

function NetworkParam:setReloadRandomSignCellCount(value)
    return self:setU32(0x94, value)
end
function NetworkParam:getReloadRandomSignCellCount(value)
    return self:getU32(0x94, value)
end

function NetworkParam:setMaxSignTotalCount_0(value)
    return self:setU32(0x98, value)
end
function NetworkParam:getMaxSignTotalCount_0(value)
    return self:getU32(0x98, value)
end

function NetworkParam:setMaxSignCellCount_0(value)
    return self:setU32(0x9C, value)
end
function NetworkParam:getMaxSignCellCount_0(value)
    return self:getU32(0x9C, value)
end

function NetworkParam:setBasicExclusiveRange_1(value)
    return self:setF32(0xA0, value)
end
function NetworkParam:getBasicExclusiveRange_1(value)
    return self:getF32(0xA0, value)
end

function NetworkParam:setBasicExclusiveHeight_1(value)
    return self:setF32(0xA4, value)
end
function NetworkParam:getBasicExclusiveHeight_1(value)
    return self:getF32(0xA4, value)
end

function NetworkParam:setSignVisibleRange_1(value)
    return self:setF32(0xA8, value)
end
function NetworkParam:getSignVisibleRange_1(value)
    return self:getF32(0xA8, value)
end

function NetworkParam:setMaxWriteSignCount(value)
    return self:setU32(0xAC, value)
end
function NetworkParam:getMaxWriteSignCount(value)
    return self:getU32(0xAC, value)
end

function NetworkParam:setMaxReadSignCount(value)
    return self:setU32(0xB0, value)
end
function NetworkParam:getMaxReadSignCount(value)
    return self:getU32(0xB0, value)
end

function NetworkParam:setReloadSignIntervalTime_0(value)
    return self:setF32(0xB4, value)
end
function NetworkParam:getReloadSignIntervalTime_0(value)
    return self:getF32(0xB4, value)
end

function NetworkParam:setCellGroupHorizontalRange_1(value)
    return self:setU32(0xB8, value)
end
function NetworkParam:getCellGroupHorizontalRange_1(value)
    return self:getU32(0xB8, value)
end

function NetworkParam:setCellGroupTopRange_1(value)
    return self:setU32(0xBC, value)
end
function NetworkParam:getCellGroupTopRange_1(value)
    return self:getU32(0xBC, value)
end

function NetworkParam:setCellGroupBottomRange_1(value)
    return self:setU32(0xC0, value)
end
function NetworkParam:getCellGroupBottomRange_1(value)
    return self:getU32(0xC0, value)
end

function NetworkParam:setLifeTime_0(value)
    return self:setU32(0xC4, value)
end
function NetworkParam:getLifeTime_0(value)
    return self:getU32(0xC4, value)
end

function NetworkParam:setDownloadSpan_0(value)
    return self:setF32(0xC8, value)
end
function NetworkParam:getDownloadSpan_0(value)
    return self:getF32(0xC8, value)
end

function NetworkParam:setDownloadEvaluationSpan(value)
    return self:setF32(0xCC, value)
end
function NetworkParam:getDownloadEvaluationSpan(value)
    return self:getF32(0xCC, value)
end

--dummy8 pad_2[4]

function NetworkParam:setDeadingGhostStartPosThreshold(value)
    return self:setF32(0xD4, value)
end
function NetworkParam:getDeadingGhostStartPosThreshold(value)
    return self:getF32(0xD4, value)
end

function NetworkParam:setKeyGuideHeight_2(value)
    return self:setF32(0xD8, value)
end
function NetworkParam:getKeyGuideHeight_2(value)
    return self:getF32(0xD8, value)
end

function NetworkParam:setKeyGuideRangePlayer(value)
    return self:setF32(0xDC, value)
end
function NetworkParam:getKeyGuideRangePlayer(value)
    return self:getF32(0xDC, value)
end

function NetworkParam:setKeyGuideHeightPlayer(value)
    return self:setF32(0xE0, value)
end
function NetworkParam:getKeyGuideHeightPlayer(value)
    return self:getF32(0xE0, value)
end

function NetworkParam:setReloadSignTotalCount_2(value)
    return self:setU32(0xE4, value)
end
function NetworkParam:getReloadSignTotalCount_2(value)
    return self:getU32(0xE4, value)
end

function NetworkParam:setReloadSignCellCount_1(value)
    return self:setU32(0xE8, value)
end
function NetworkParam:getReloadSignCellCount_1(value)
    return self:getU32(0xE8, value)
end

function NetworkParam:setMaxSignTotalCount_1(value)
    return self:setU32(0xEC, value)
end
function NetworkParam:getMaxSignTotalCount_1(value)
    return self:getU32(0xEC, value)
end

function NetworkParam:setMaxSignCellCount_1(value)
    return self:setU32(0xF0, value)
end
function NetworkParam:getMaxSignCellCount_1(value)
    return self:getU32(0xF0, value)
end

function NetworkParam:setReloadSignIntervalTime_1(value)
    return self:setF32(0xF4, value)
end
function NetworkParam:getReloadSignIntervalTime_1(value)
    return self:getF32(0xF4, value)
end

function NetworkParam:setSignVisibleRange_2(value)
    return self:setF32(0xF8, value)
end
function NetworkParam:getSignVisibleRange_2(value)
    return self:getF32(0xF8, value)
end

function NetworkParam:setBasicExclusiveRange_2(value)
    return self:setF32(0xFC, value)
end
function NetworkParam:getBasicExclusiveRange_2(value)
    return self:getF32(0xFC, value)
end

function NetworkParam:setBasicExclusiveHeight_2(value)
    return self:setF32(0x100, value)
end
function NetworkParam:getBasicExclusiveHeight_2(value)
    return self:getF32(0x100, value)
end

function NetworkParam:setCellGroupHorizontalRange_2(value)
    return self:setU32(0x104, value)
end
function NetworkParam:getCellGroupHorizontalRange_2(value)
    return self:getU32(0x104, value)
end

function NetworkParam:setCellGroupTopRange_2(value)
    return self:setU32(0x108, value)
end
function NetworkParam:getCellGroupTopRange_2(value)
    return self:getU32(0x108, value)
end

function NetworkParam:setCellGroupBottomRange_2(value)
    return self:setU32(0x10C, value)
end
function NetworkParam:getCellGroupBottomRange_2(value)
    return self:getU32(0x10C, value)
end

function NetworkParam:setLifeTime_1(value)
    return self:setU32(0x110, value)
end
function NetworkParam:getLifeTime_1(value)
    return self:getU32(0x110, value)
end

function NetworkParam:setRecordDeadingGhostTotalTime(value)
    return self:setF32(0x114, value)
end
function NetworkParam:getRecordDeadingGhostTotalTime(value)
    return self:getF32(0x114, value)
end

function NetworkParam:setRecordDeadingGhostMinTime(value)
    return self:setF32(0x118, value)
end
function NetworkParam:getRecordDeadingGhostMinTime(value)
    return self:getF32(0x118, value)
end

function NetworkParam:setDownloadSpan_1(value)
    return self:setF32(0x11C, value)
end
function NetworkParam:getDownloadSpan_1(value)
    return self:getF32(0x11C, value)
end

function NetworkParam:setStatueCreatableDistance(value)
    return self:setF32(0x120, value)
end
function NetworkParam:getStatueCreatableDistance(value)
    return self:getF32(0x120, value)
end

function NetworkParam:setReloadGhostTotalCount(value)
    return self:setU32(0x124, value)
end
function NetworkParam:getReloadGhostTotalCount(value)
    return self:getU32(0x124, value)
end

function NetworkParam:setReloadGhostCellCount(value)
    return self:setU32(0x128, value)
end
function NetworkParam:getReloadGhostCellCount(value)
    return self:getU32(0x128, value)
end

function NetworkParam:setMaxGhostTotalCount(value)
    return self:setU32(0x12C, value)
end
function NetworkParam:getMaxGhostTotalCount(value)
    return self:getU32(0x12C, value)
end

function NetworkParam:setDistanceOfBeginRecordVersus(value)
    return self:setF32(0x130, value)
end
function NetworkParam:getDistanceOfBeginRecordVersus(value)
    return self:getF32(0x130, value)
end

function NetworkParam:setDistanceOfEndRecordVersus(value)
    return self:setF32(0x134, value)
end
function NetworkParam:getDistanceOfEndRecordVersus(value)
    return self:getF32(0x134, value)
end

function NetworkParam:setUpdateWanderGhostIntervalTime(value)
    return self:setF32(0x138, value)
end
function NetworkParam:getUpdateWanderGhostIntervalTime(value)
    return self:getF32(0x138, value)
end

function NetworkParam:setUpdateVersusGhostIntervalTime(value)
    return self:setF32(0x13C, value)
end
function NetworkParam:getUpdateVersusGhostIntervalTime(value)
    return self:getF32(0x13C, value)
end

function NetworkParam:setRecordWanderingGhostTime(value)
    return self:setF32(0x140, value)
end
function NetworkParam:getRecordWanderingGhostTime(value)
    return self:getF32(0x140, value)
end

function NetworkParam:setRecordWanderingGhostMinTime(value)
    return self:setF32(0x144, value)
end
function NetworkParam:getRecordWanderingGhostMinTime(value)
    return self:getF32(0x144, value)
end

function NetworkParam:setUpdateBonfireGhostIntervalTime(value)
    return self:setF32(0x148, value)
end
function NetworkParam:getUpdateBonfireGhostIntervalTime(value)
    return self:getF32(0x148, value)
end

function NetworkParam:setReplayGhostRangeOnView(value)
    return self:setF32(0x14C, value)
end
function NetworkParam:getReplayGhostRangeOnView(value)
    return self:getF32(0x14C, value)
end

function NetworkParam:setReplayGhostRangeOutView(value)
    return self:setF32(0x150, value)
end
function NetworkParam:getReplayGhostRangeOutView(value)
    return self:getF32(0x150, value)
end

function NetworkParam:setReplayBonfireGhostTime(value)
    return self:setF32(0x154, value)
end
function NetworkParam:getReplayBonfireGhostTime(value)
    return self:getF32(0x154, value)
end

function NetworkParam:setMinBonfireGhostValidRange(value)
    return self:setF32(0x158, value)
end
function NetworkParam:getMinBonfireGhostValidRange(value)
    return self:getF32(0x158, value)
end

function NetworkParam:setMaxBonfireGhostValidRange(value)
    return self:setF32(0x15C, value)
end
function NetworkParam:getMaxBonfireGhostValidRange(value)
    return self:getF32(0x15C, value)
end

function NetworkParam:setMinReplayIntervalTime(value)
    return self:setF32(0x160, value)
end
function NetworkParam:getMinReplayIntervalTime(value)
    return self:getF32(0x160, value)
end

function NetworkParam:setMaxReplayIntervalTime(value)
    return self:setF32(0x164, value)
end
function NetworkParam:getMaxReplayIntervalTime(value)
    return self:getF32(0x164, value)
end

function NetworkParam:setReloadGhostIntervalTime(value)
    return self:setF32(0x168, value)
end
function NetworkParam:getReloadGhostIntervalTime(value)
    return self:getF32(0x168, value)
end

function NetworkParam:setCellGroupHorizontalRange_3(value)
    return self:setU32(0x16C, value)
end
function NetworkParam:getCellGroupHorizontalRange_3(value)
    return self:getU32(0x16C, value)
end

function NetworkParam:setCellGroupTopRange_3(value)
    return self:setU32(0x170, value)
end
function NetworkParam:getCellGroupTopRange_3(value)
    return self:getU32(0x170, value)
end

function NetworkParam:setReplayBonfirePhantomParamIdForCodename(value)
    return self:setU32(0x174, value)
end
function NetworkParam:getReplayBonfirePhantomParamIdForCodename(value)
    return self:getU32(0x174, value)
end

function NetworkParam:setReplayBonfireModeRange(value)
    return self:setF32(0x178, value)
end
function NetworkParam:getReplayBonfireModeRange(value)
    return self:getF32(0x178, value)
end

function NetworkParam:setReplayBonfirePhantomParamId(value)
    return self:setU32(0x17C, value)
end
function NetworkParam:getReplayBonfirePhantomParamId(value)
    return self:getU32(0x17C, value)
end

function NetworkParam:setUnknown_1(value)
    return self:setU32(0x180, value)
end
function NetworkParam:getUnknown_1(value)
    return self:getU32(0x180, value)
end

function NetworkParam:setReloadVisitListCoolTime(value)
    return self:setF32(0x184, value)
end
function NetworkParam:getReloadVisitListCoolTime(value)
    return self:getF32(0x184, value)
end

function NetworkParam:setMaxCoopBlueSummonCount(value)
    return self:setU32(0x188, value)
end
function NetworkParam:getMaxCoopBlueSummonCount(value)
    return self:getU32(0x188, value)
end

function NetworkParam:setMaxBellGuardSummonCount(value)
    return self:setU32(0x18C, value)
end
function NetworkParam:getMaxBellGuardSummonCount(value)
    return self:getU32(0x18C, value)
end

function NetworkParam:setMaxVisitListCount(value)
    return self:setU32(0x190, value)
end
function NetworkParam:getMaxVisitListCount(value)
    return self:getU32(0x190, value)
end

function NetworkParam:setReloadSearch_CoopBlue_Min(value)
    return self:setF32(0x194, value)
end
function NetworkParam:getReloadSearch_CoopBlue_Min(value)
    return self:getF32(0x194, value)
end

function NetworkParam:setReloadSearch_CoopBlue_Max(value)
    return self:setF32(0x198, value)
end
function NetworkParam:getReloadSearch_CoopBlue_Max(value)
    return self:getF32(0x198, value)
end

function NetworkParam:setReloadSearch_BellGuard_Min(value)
    return self:setF32(0x19C, value)
end
function NetworkParam:getReloadSearch_BellGuard_Min(value)
    return self:getF32(0x19C, value)
end

function NetworkParam:setReloadSearch_BellGuard_Max(value)
    return self:setF32(0x1A0, value)
end
function NetworkParam:getReloadSearch_BellGuard_Max(value)
    return self:getF32(0x1A0, value)
end

function NetworkParam:setReloadSearch_RatKing_Min(value)
    return self:setF32(0x1A4, value)
end
function NetworkParam:getReloadSearch_RatKing_Min(value)
    return self:getF32(0x1A4, value)
end

function NetworkParam:setReloadSearch_RatKing_Max(value)
    return self:setF32(0x1A8, value)
end
function NetworkParam:getReloadSearch_RatKing_Max(value)
    return self:getF32(0x1A8, value)
end

--dummy8 visitpad00[8]

function NetworkParam:setSrttMaxLimit(value)
    return self:setF32(0x1B4, value)
end
function NetworkParam:getSrttMaxLimit(value)
    return self:getF32(0x1B4, value)
end

function NetworkParam:setSrttMeanLimit(value)
    return self:setF32(0x1B8, value)
end
function NetworkParam:getSrttMeanLimit(value)
    return self:getF32(0x1B8, value)
end

function NetworkParam:setSrttMeanDeviationLimit(value)
    return self:setF32(0x1BC, value)
end
function NetworkParam:getSrttMeanDeviationLimit(value)
    return self:getF32(0x1BC, value)
end

function NetworkParam:setDarkPhantomLimitBoostTime(value)
    return self:setF32(0x1C0, value)
end
function NetworkParam:getDarkPhantomLimitBoostTime(value)
    return self:getF32(0x1C0, value)
end

function NetworkParam:setDarkPhantomLimitBoostScale(value)
    return self:setF32(0x1C4, value)
end
function NetworkParam:getDarkPhantomLimitBoostScale(value)
    return self:getF32(0x1C4, value)
end

function NetworkParam:setMultiplayDisableLifeTime(value)
    return self:setF32(0x1C8, value)
end
function NetworkParam:getMultiplayDisableLifeTime(value)
    return self:getF32(0x1C8, value)
end

function NetworkParam:setAbyssMultiplayLimit(value)
    return self:setU8(0x1CC, value)
end
function NetworkParam:getAbyssMultiplayLimit(value)
    return self:getU8(0x1CC, value)
end

function NetworkParam:setPhantomWarpMinimumTime(value)
    return self:setU8(0x1CD, value)
end
function NetworkParam:getPhantomWarpMinimumTime(value)
    return self:getU8(0x1CD, value)
end

function NetworkParam:setPhantomReturnDelayTime(value)
    return self:setU8(0x1CE, value)
end
function NetworkParam:getPhantomReturnDelayTime(value)
    return self:getU8(0x1CE, value)
end

function NetworkParam:setTerminateTimeoutTime(value)
    return self:setU8(0x1CF, value)
end
function NetworkParam:getTerminateTimeoutTime(value)
    return self:getU8(0x1CF, value)
end

function NetworkParam:setPenaltyPointLanDisconnect(value)
    return self:setU16(0x1D0, value)
end
function NetworkParam:getPenaltyPointLanDisconnect(value)
    return self:getU16(0x1D0, value)
end

function NetworkParam:setPenaltyPointSignout(value)
    return self:setU16(0x1D2, value)
end
function NetworkParam:getPenaltyPointSignout(value)
    return self:getU16(0x1D2, value)
end

function NetworkParam:setPenaltyPointReboot(value)
    return self:setU16(0x1D4, value)
end
function NetworkParam:getPenaltyPointReboot(value)
    return self:getU16(0x1D4, value)
end

function NetworkParam:setPenaltyPointBeginPenalize(value)
    return self:setU16(0x1D6, value)
end
function NetworkParam:getPenaltyPointBeginPenalize(value)
    return self:getU16(0x1D6, value)
end

function NetworkParam:setPenaltyForgiveItemLimitTime(value)
    return self:setF32(0x1D8, value)
end
function NetworkParam:getPenaltyForgiveItemLimitTime(value)
    return self:getF32(0x1D8, value)
end

function NetworkParam:setAllAreaSearchRate_CoopBlue(value)
    return self:setU8(0x1DC, value)
end
function NetworkParam:getAllAreaSearchRate_CoopBlue(value)
    return self:getU8(0x1DC, value)
end

function NetworkParam:setAllAreaSearchRate_VsBlue(value)
    return self:setU8(0x1DD, value)
end
function NetworkParam:getAllAreaSearchRate_VsBlue(value)
    return self:getU8(0x1DD, value)
end

function NetworkParam:setAllAreaSearchRate_BellGuard(value)
    return self:setU8(0x1DE, value)
end
function NetworkParam:getAllAreaSearchRate_BellGuard(value)
    return self:getU8(0x1DE, value)
end

function NetworkParam:setBloodMessageEvalHealRate(value)
    return self:setU8(0x1DF, value)
end
function NetworkParam:getBloodMessageEvalHealRate(value)
    return self:getU8(0x1DF, value)
end

function NetworkParam:setSmallGoldSuccessHostRewardId(value)
    return self:setU32(0x1E0, value)
end
function NetworkParam:getSmallGoldSuccessHostRewardId(value)
    return self:getU32(0x1E0, value)
end

function NetworkParam:setDoorInvalidPlayAreaExtents(value)
    return self:setF32(0x1E4, value)
end
function NetworkParam:getDoorInvalidPlayAreaExtents(value)
    return self:getF32(0x1E4, value)
end

function NetworkParam:setSignDisplayMax(value)
    return self:setU8(0x1E8, value)
end
function NetworkParam:getSignDisplayMax(value)
    return self:getU8(0x1E8, value)
end

function NetworkParam:setBloodStainDisplayMax(value)
    return self:setU8(0x1E9, value)
end
function NetworkParam:getBloodStainDisplayMax(value)
    return self:getU8(0x1E9, value)
end

function NetworkParam:setBloodMessageDisplayMax(value)
    return self:setU8(0x1EA, value)
end
function NetworkParam:getBloodMessageDisplayMax(value)
    return self:getU8(0x1EA, value)
end

function NetworkParam:setUnknown_2(value)
    return self:setU8(0x1EB, value)
end
function NetworkParam:getUnknown_2(value)
    return self:getU8(0x1EB, value)
end

function NetworkParam:setUnknown_3(value)
    return self:setU32(0x1EC, value)
end
function NetworkParam:getUnknown_3(value)
    return self:getU32(0x1EC, value)
end

function NetworkParam:setUnknown_4(value)
    return self:setU32(0x1F0, value)
end
function NetworkParam:getUnknown_4(value)
    return self:getU32(0x1F0, value)
end

function NetworkParam:setUnknown_5(value)
    return self:setU32(0x1F4, value)
end
function NetworkParam:getUnknown_5(value)
    return self:getU32(0x1F4, value)
end

function NetworkParam:setUnknown_6(value)
    return self:setU32(0x1F8, value)
end
function NetworkParam:getUnknown_6(value)
    return self:getU32(0x1F8, value)
end

function NetworkParam:setUnknown_7(value)
    return self:setU32(0x1FC, value)
end
function NetworkParam:getUnknown_7(value)
    return self:getU32(0x1FC, value)
end

function NetworkParam:setUnknown_8(value)
    return self:setU32(0x200, value)
end
function NetworkParam:getUnknown_8(value)
    return self:getU32(0x200, value)
end

function NetworkParam:setUnknown_9(value)
    return self:setU32(0x204, value)
end
function NetworkParam:getUnknown_9(value)
    return self:getU32(0x204, value)
end

function NetworkParam:setUnknown_10(value)
    return self:setU32(0x208, value)
end
function NetworkParam:getUnknown_10(value)
    return self:getU32(0x208, value)
end

function NetworkParam:setUnknown_11(value)
    return self:setU32(0x20C, value)
end
function NetworkParam:getUnknown_11(value)
    return self:getU32(0x20C, value)
end

function NetworkParam:setUnknown_12(value)
    return self:setU32(0x210, value)
end
function NetworkParam:getUnknown_12(value)
    return self:getU32(0x210, value)
end

function NetworkParam:setSummonMessageInterval(value)
    return self:setF32(0x214, value)
end
function NetworkParam:getSummonMessageInterval(value)
    return self:getF32(0x214, value)
end

function NetworkParam:setHostRegisterUpdateTime(value)
    return self:setF32(0x218, value)
end
function NetworkParam:getHostRegisterUpdateTime(value)
    return self:getF32(0x218, value)
end

function NetworkParam:setHostTimeOutTime(value)
    return self:setF32(0x21C, value)
end
function NetworkParam:getHostTimeOutTime(value)
    return self:getF32(0x21C, value)
end

function NetworkParam:setGuestUpdateTime(value)
    return self:setF32(0x220, value)
end
function NetworkParam:getGuestUpdateTime(value)
    return self:getF32(0x220, value)
end

function NetworkParam:setGuestPlayerNoTimeOutTime(value)
    return self:setF32(0x224, value)
end
function NetworkParam:getGuestPlayerNoTimeOutTime(value)
    return self:getF32(0x224, value)
end

function NetworkParam:setHostPlayerNoTimeOutTime(value)
    return self:setF32(0x228, value)
end
function NetworkParam:getHostPlayerNoTimeOutTime(value)
    return self:getF32(0x228, value)
end

function NetworkParam:setRequestSearchQuickMatchLimit(value)
    return self:setU32(0x22C, value)
end
function NetworkParam:getRequestSearchQuickMatchLimit(value)
    return self:getU32(0x22C, value)
end

function NetworkParam:setAvatarMatchSearchMax(value)
    return self:setU32(0x230, value)
end
function NetworkParam:getAvatarMatchSearchMax(value)
    return self:getU32(0x230, value)
end

function NetworkParam:setBattleRoyalMatchSearchMin(value)
    return self:setU32(0x234, value)
end
function NetworkParam:getBattleRoyalMatchSearchMin(value)
    return self:getU32(0x234, value)
end

function NetworkParam:setBattleRoyalMatchSearchMax(value)
    return self:setU32(0x238, value)
end
function NetworkParam:getBattleRoyalMatchSearchMax(value)
    return self:getU32(0x238, value)
end

function NetworkParam:setUnknown_13(value)
    return self:setU32(0x23C, value)
end
function NetworkParam:getUnknown_13(value)
    return self:getU32(0x23C, value)
end

function NetworkParam:setUnknown_14(value)
    return self:setU32(0x240, value)
end
function NetworkParam:getUnknown_14(value)
    return self:getU32(0x240, value)
end

function NetworkParam:setVisitorListMax(value)
    return self:setU32(0x244, value)
end
function NetworkParam:getVisitorListMax(value)
    return self:getU32(0x244, value)
end

function NetworkParam:setVisitorTimeOutTime(value)
    return self:setF32(0x248, value)
end
function NetworkParam:getVisitorTimeOutTime(value)
    return self:getF32(0x248, value)
end

function NetworkParam:setDownloadSpan_2(value)
    return self:setF32(0x24C, value)
end
function NetworkParam:getDownloadSpan_2(value)
    return self:getF32(0x24C, value)
end

function NetworkParam:setVisitorGuestRequestMessageIntervalSec(value)
    return self:setF32(0x250, value)
end
function NetworkParam:getVisitorGuestRequestMessageIntervalSec(value)
    return self:getF32(0x250, value)
end

function NetworkParam:setWanderGhostIntervalLifeTime(value)
    return self:setF32(0x254, value)
end
function NetworkParam:getWanderGhostIntervalLifeTime(value)
    return self:getF32(0x254, value)
end

function NetworkParam:setUnknown_15(value)
    return self:setF32(0x258, value)
end
function NetworkParam:getUnknown_15(value)
    return self:getF32(0x258, value)
end

function NetworkParam:setUnknown_16(value)
    return self:setF32(0x25C, value)
end
function NetworkParam:getUnknown_16(value)
    return self:getF32(0x25C, value)
end

function NetworkParam:setUnknown_17(value)
    return self:setF32(0x260, value)
end
function NetworkParam:getUnknown_17(value)
    return self:getF32(0x260, value)
end

function NetworkParam:setYellowMonkTimeOutTime(value)
    return self:setF32(0x264, value)
end
function NetworkParam:getYellowMonkTimeOutTime(value)
    return self:getF32(0x264, value)
end

function NetworkParam:setYellowMonkDownloadSpan(value)
    return self:setF32(0x268, value)
end
function NetworkParam:getYellowMonkDownloadSpan(value)
    return self:getF32(0x268, value)
end

function NetworkParam:setYellowMonkOverallFlowTimeOutTime(value)
    return self:setF32(0x26C, value)
end
function NetworkParam:getYellowMonkOverallFlowTimeOutTime(value)
    return self:getF32(0x26C, value)
end

function NetworkParam:setUnknown_18(value)
    return self:setU32(0x270, value)
end
function NetworkParam:getUnknown_18(value)
    return self:getU32(0x270, value)
end

function NetworkParam:setUnknown_19(value)
    return self:setF32(0x274, value)
end
function NetworkParam:getUnknown_19(value)
    return self:getF32(0x274, value)
end

function NetworkParam:setUnknown_20(value)
    return self:setF32(0x278, value)
end
function NetworkParam:getUnknown_20(value)
    return self:getF32(0x278, value)
end

function NetworkParam:setUnknown_21(value)
    return self:setF32(0x27C, value)
end
function NetworkParam:getUnknown_21(value)
    return self:getF32(0x27C, value)
end

function NetworkParam:setUnknown_22(value)
    return self:setU32(0x280, value)
end
function NetworkParam:getUnknown_22(value)
    return self:getU32(0x280, value)
end

function NetworkParam:setUnknown_23(value)
    return self:setU32(0x284, value)
end
function NetworkParam:getUnknown_23(value)
    return self:getU32(0x284, value)
end

function NetworkParam:setUnknown_24(value)
    return self:setU32(0x288, value)
end
function NetworkParam:getUnknown_24(value)
    return self:getU32(0x288, value)
end
[disable]
NetworkParam = nil
