{$lua}
if syntaxcheck then return end
[enable]
SoundCutsceneParam = {}
function SoundCutsceneParam:new(id_or_all, patchName)
    return paramPatcher(self, "SoundCutsceneParam", 0x25, id_or_all, patchName)
end



function SoundCutsceneParam:setDisableParam_NT(value)
    return self:setBinary(0x00, 0, value, 1)
end

function SoundCutsceneParam:getDisableParam_NT()
    return self:getBinary(0x00, 0, value, 1)
end

--dummy8 disableParamReserve1:7

--dummy8 disableParamReserve2[3]

function SoundCutsceneParam:setReverbType(value)
    return self:setU8(0x04, value)
end
function SoundCutsceneParam:getReverbType(value)
    return self:getU8(0x04, value)
end

--dummy8 pad0[3]

function SoundCutsceneParam:setBgmBehaviorTypeOnStart(value)
    return self:setU16(0x08, value)
end
function SoundCutsceneParam:getBgmBehaviorTypeOnStart(value)
    return self:getU16(0x08, value)
end

function SoundCutsceneParam:setOneShotBgmBehaviorOnStart(value)
    return self:setU16(0x0A, value)
end
function SoundCutsceneParam:getOneShotBgmBehaviorOnStart(value)
    return self:getU16(0x0A, value)
end

function SoundCutsceneParam:setPostPlaySeId(value)
    return self:setU32(0x0C, value)
end
function SoundCutsceneParam:getPostPlaySeId(value)
    return self:getU32(0x0C, value)
end

function SoundCutsceneParam:setPostPlaySeIdForSkip(value)
    return self:setU32(0x10, value)
end
function SoundCutsceneParam:getPostPlaySeIdForSkip(value)
    return self:getU32(0x10, value)
end

function SoundCutsceneParam:setEnterMapMuteStopTimeOnDrawCutscene(value)
    return self:setF32(0x14, value)
end
function SoundCutsceneParam:getEnterMapMuteStopTimeOnDrawCutscene(value)
    return self:getF32(0x14, value)
end

function SoundCutsceneParam:setUnknown_1(value)
    return self:setF32(0x18, value)
end
function SoundCutsceneParam:getUnknown_1(value)
    return self:getF32(0x18, value)
end

--dummy8 reserved_old[8]
[disable]
SoundCutsceneParam = nil
