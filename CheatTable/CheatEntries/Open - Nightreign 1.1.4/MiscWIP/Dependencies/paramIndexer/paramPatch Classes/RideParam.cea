{$lua}
if syntaxcheck then return end
[enable]
RideParam = {}
function RideParam:new(id_or_all, patchName)
    return paramPatcher(self, "RideParam", 0x41, id_or_all, patchName)
end



function RideParam:setAtkChrId(value)
    return self:setU32(0x00, value)
end
function RideParam:getAtkChrId(value)
    return self:getU32(0x00, value)
end

function RideParam:setDefChrId(value)
    return self:setU32(0x04, value)
end
function RideParam:getDefChrId(value)
    return self:getU32(0x04, value)
end

function RideParam:setRideCamParamId(value)
    return self:setU32(0x08, value)
end
function RideParam:getRideCamParamId(value)
    return self:getU32(0x08, value)
end

function RideParam:setAtkChrAnimId(value)
    return self:setU32(0x0C, value)
end
function RideParam:getAtkChrAnimId(value)
    return self:getU32(0x0C, value)
end

function RideParam:setDefChrAnimId(value)
    return self:setU32(0x10, value)
end
function RideParam:getDefChrAnimId(value)
    return self:getU32(0x10, value)
end

function RideParam:setDefAdjustDmyId(value)
    return self:setU32(0x14, value)
end
function RideParam:getDefAdjustDmyId(value)
    return self:getU32(0x14, value)
end

function RideParam:setDefCheckDmyId(value)
    return self:setU32(0x18, value)
end
function RideParam:getDefCheckDmyId(value)
    return self:getU32(0x18, value)
end

function RideParam:setDiffAngMyToDef(value)
    return self:setF32(0x1C, value)
end
function RideParam:getDiffAngMyToDef(value)
    return self:getF32(0x1C, value)
end

function RideParam:setDist(value)
    return self:setF32(0x20, value)
end
function RideParam:getDist(value)
    return self:getF32(0x20, value)
end

function RideParam:setUpperYRange(value)
    return self:setF32(0x24, value)
end
function RideParam:getUpperYRange(value)
    return self:getF32(0x24, value)
end

function RideParam:setLowerYRange(value)
    return self:setF32(0x28, value)
end
function RideParam:getLowerYRange(value)
    return self:getF32(0x28, value)
end

function RideParam:setDiffAngMin(value)
    return self:setF32(0x2C, value)
end
function RideParam:getDiffAngMin(value)
    return self:getF32(0x2C, value)
end

function RideParam:setDiffAngMax(value)
    return self:setF32(0x30, value)
end
function RideParam:getDiffAngMax(value)
    return self:getF32(0x30, value)
end

--dummy8 pad[12]
[disable]
RideParam = nil
