{$lua}
if syntaxcheck then return end
[enable]
PlayRegionParam = {}
function PlayRegionParam:new(id_or_all, patchName)
    return paramPatcher(self, "PlayRegionParam", 0x111, id_or_all, patchName)
end



function PlayRegionParam:setDisableParam_NT(value)
    return self:setBinary(0x00, 0, value, 1)
end

function PlayRegionParam:getDisableParam_NT()
    return self:getBinary(0x00, 0, value, 1)
end

--dummy8 disableParamReserve1:7

--dummy8 disableParamReserve2[3]

function PlayRegionParam:setMatchAreaId(value)
    return self:setU32(0x04, value)
end
function PlayRegionParam:getMatchAreaId(value)
    return self:getU32(0x04, value)
end

function PlayRegionParam:setMultiPlayStartLimitEventFlagId(value)
    return self:setU32(0x08, value)
end
function PlayRegionParam:getMultiPlayStartLimitEventFlagId(value)
    return self:getU32(0x08, value)
end

function PlayRegionParam:setOtherDisableDistance(value)
    return self:setF32(0x0C, value)
end
function PlayRegionParam:getOtherDisableDistance(value)
    return self:getF32(0x0C, value)
end

function PlayRegionParam:setPcPositionSaveLimitEventFlagId(value)
    return self:setU32(0x10, value)
end
function PlayRegionParam:getPcPositionSaveLimitEventFlagId(value)
    return self:getU32(0x10, value)
end

function PlayRegionParam:setBossAreaId(value)
    return self:setU32(0x14, value)
end
function PlayRegionParam:getBossAreaId(value)
    return self:getU32(0x14, value)
end

function PlayRegionParam:setCultNpcWhiteGhostEntityId_byFree(value)
    return self:setU16(0x18, value)
end
function PlayRegionParam:getCultNpcWhiteGhostEntityId_byFree(value)
    return self:getU16(0x18, value)
end

function PlayRegionParam:setBMapGuradianRegion(value)
    return self:setU8(0x1A, value)
end
function PlayRegionParam:getBMapGuradianRegion(value)
    return self:getU8(0x1A, value)
end

function PlayRegionParam:setBYellowCostumeRegion(value)
    return self:setBinary(0x1B, 0, value, 1)
end

function PlayRegionParam:getBYellowCostumeRegion()
    return self:getBinary(0x1B, 0, value, 1)
end

function PlayRegionParam:setMultiPlayStartLimitEventFlagId_targetFlagState(value)
    return self:setBinary(0x1B, 1, value, 1)
end

function PlayRegionParam:getMultiPlayStartLimitEventFlagId_targetFlagState()
    return self:getBinary(0x1B, 1, value, 1)
end

function PlayRegionParam:setBreakInLimitEventFlagId_1_targetFlagState(value)
    return self:setBinary(0x1B, 2, value, 1)
end

function PlayRegionParam:getBreakInLimitEventFlagId_1_targetFlagState()
    return self:getBinary(0x1B, 2, value, 1)
end

function PlayRegionParam:setWhiteSignLimitEventFlagId_1_targetFlagState(value)
    return self:setBinary(0x1B, 3, value, 1)
end

function PlayRegionParam:getWhiteSignLimitEventFlagId_1_targetFlagState()
    return self:getBinary(0x1B, 3, value, 1)
end

function PlayRegionParam:setRedSignLimitEventFlagId_1_targetFlagState(value)
    return self:setBinary(0x1B, 4, value, 1)
end

function PlayRegionParam:getRedSignLimitEventFlagId_1_targetFlagState()
    return self:getBinary(0x1B, 4, value, 1)
end

function PlayRegionParam:setBreakInLimitEventFlagId_2_targetFlagState(value)
    return self:setBinary(0x1B, 5, value, 1)
end

function PlayRegionParam:getBreakInLimitEventFlagId_2_targetFlagState()
    return self:getBinary(0x1B, 5, value, 1)
end

function PlayRegionParam:setBreakInLimitEventFlagId_3_targetFlagState(value)
    return self:setBinary(0x1B, 6, value, 1)
end

function PlayRegionParam:getBreakInLimitEventFlagId_3_targetFlagState()
    return self:getBinary(0x1B, 6, value, 1)
end

function PlayRegionParam:setWhiteSignLimitEventFlagId_2_targetFlagState(value)
    return self:setBinary(0x1B, 7, value, 1)
end

function PlayRegionParam:getWhiteSignLimitEventFlagId_2_targetFlagState()
    return self:getBinary(0x1B, 7, value, 1)
end

function PlayRegionParam:setWarpItemUsePermitBonfireId_1(value)
    return self:setU32(0x1C, value)
end
function PlayRegionParam:getWarpItemUsePermitBonfireId_1(value)
    return self:getU32(0x1C, value)
end

function PlayRegionParam:setWarpItemUsePermitBonfireId_2(value)
    return self:setU32(0x20, value)
end
function PlayRegionParam:getWarpItemUsePermitBonfireId_2(value)
    return self:getU32(0x20, value)
end

function PlayRegionParam:setWarpItemUsePermitBonfireId_3(value)
    return self:setU32(0x24, value)
end
function PlayRegionParam:getWarpItemUsePermitBonfireId_3(value)
    return self:getU32(0x24, value)
end

function PlayRegionParam:setWarpItemUsePermitBonfireId_4(value)
    return self:setU32(0x28, value)
end
function PlayRegionParam:getWarpItemUsePermitBonfireId_4(value)
    return self:getU32(0x28, value)
end

function PlayRegionParam:setWarpItemUsePermitBonfireId_5(value)
    return self:setU32(0x2C, value)
end
function PlayRegionParam:getWarpItemUsePermitBonfireId_5(value)
    return self:getU32(0x2C, value)
end

function PlayRegionParam:setWarpItemProhibitionEventFlagId_1(value)
    return self:setU32(0x30, value)
end
function PlayRegionParam:getWarpItemProhibitionEventFlagId_1(value)
    return self:getU32(0x30, value)
end

function PlayRegionParam:setWarpItemProhibitionEventFlagId_2(value)
    return self:setU32(0x34, value)
end
function PlayRegionParam:getWarpItemProhibitionEventFlagId_2(value)
    return self:getU32(0x34, value)
end

function PlayRegionParam:setWarpItemProhibitionEventFlagId_3(value)
    return self:setU32(0x38, value)
end
function PlayRegionParam:getWarpItemProhibitionEventFlagId_3(value)
    return self:getU32(0x38, value)
end

function PlayRegionParam:setWarpItemProhibitionEventFlagId_4(value)
    return self:setU32(0x3C, value)
end
function PlayRegionParam:getWarpItemProhibitionEventFlagId_4(value)
    return self:getU32(0x3C, value)
end

function PlayRegionParam:setWarpItemProhibitionEventFlagId_5(value)
    return self:setU32(0x40, value)
end
function PlayRegionParam:getWarpItemProhibitionEventFlagId_5(value)
    return self:getU32(0x40, value)
end

function PlayRegionParam:setEnableBloodstain(value)
    return self:setBinary(0x44, 0, value, 1)
end

function PlayRegionParam:getEnableBloodstain()
    return self:getBinary(0x44, 0, value, 1)
end

function PlayRegionParam:setEnableBloodMessage(value)
    return self:setBinary(0x44, 1, value, 1)
end

function PlayRegionParam:getEnableBloodMessage()
    return self:getBinary(0x44, 1, value, 1)
end

function PlayRegionParam:setEnableGhost(value)
    return self:setBinary(0x44, 2, value, 1)
end

function PlayRegionParam:getEnableGhost()
    return self:getBinary(0x44, 2, value, 1)
end

function PlayRegionParam:setDispMask00(value)
    return self:setBinary(0x44, 3, value, 1)
end

function PlayRegionParam:getDispMask00()
    return self:getBinary(0x44, 3, value, 1)
end

function PlayRegionParam:setDispMask01(value)
    return self:setBinary(0x44, 4, value, 1)
end

function PlayRegionParam:getDispMask01()
    return self:getBinary(0x44, 4, value, 1)
end

function PlayRegionParam:setWhiteSignLimitEventFlagId_3_targetFlagState(value)
    return self:setBinary(0x44, 5, value, 1)
end

function PlayRegionParam:getWhiteSignLimitEventFlagId_3_targetFlagState()
    return self:getBinary(0x44, 5, value, 1)
end

function PlayRegionParam:setRedSignLimitEventFlagId_2_targetFlagState(value)
    return self:setBinary(0x44, 6, value, 1)
end

function PlayRegionParam:getRedSignLimitEventFlagId_2_targetFlagState()
    return self:getBinary(0x44, 6, value, 1)
end

function PlayRegionParam:setRedSignLimitEventFlagId_3_targetFlagState(value)
    return self:setBinary(0x44, 7, value, 1)
end

function PlayRegionParam:getRedSignLimitEventFlagId_3_targetFlagState()
    return self:getBinary(0x44, 7, value, 1)
end

function PlayRegionParam:setIsAutoIntrudePoint(value)
    return self:setBinary(0x45, 0, value, 1)
end

function PlayRegionParam:getIsAutoIntrudePoint()
    return self:getBinary(0x45, 0, value, 1)
end

--dummy8 pad1_old:7

function PlayRegionParam:setUnknown_0x45_1(value)
    return self:setBinary(0x46, 0, value, 1)
end

function PlayRegionParam:getUnknown_0x45_1()
    return self:getBinary(0x46, 0, value, 1)
end

--dummy8 pad1:6

--dummy8 pad2[2]

function PlayRegionParam:setMultiPlayHASHostLimitEventFlagId(value)
    return self:setU32(0x48, value)
end
function PlayRegionParam:getMultiPlayHASHostLimitEventFlagId(value)
    return self:getU32(0x48, value)
end

function PlayRegionParam:setOtherMaxDistance(value)
    return self:setF32(0x4C, value)
end
function PlayRegionParam:getOtherMaxDistance(value)
    return self:getF32(0x4C, value)
end

function PlayRegionParam:setSignPuddleOpenEventFlagId(value)
    return self:setU32(0x50, value)
end
function PlayRegionParam:getSignPuddleOpenEventFlagId(value)
    return self:getU32(0x50, value)
end

function PlayRegionParam:setAreaNo(value)
    return self:setU8(0x54, value)
end
function PlayRegionParam:getAreaNo(value)
    return self:getU8(0x54, value)
end

function PlayRegionParam:setGridXNo(value)
    return self:setU8(0x55, value)
end
function PlayRegionParam:getGridXNo(value)
    return self:getU8(0x55, value)
end

function PlayRegionParam:setGridZNo(value)
    return self:setU8(0x56, value)
end
function PlayRegionParam:getGridZNo(value)
    return self:getU8(0x56, value)
end

--dummy8 pad4[1]

function PlayRegionParam:setPosX(value)
    return self:setF32(0x58, value)
end
function PlayRegionParam:getPosX(value)
    return self:getF32(0x58, value)
end

function PlayRegionParam:setPosY(value)
    return self:setF32(0x5C, value)
end
function PlayRegionParam:getPosY(value)
    return self:getF32(0x5C, value)
end

function PlayRegionParam:setPosZ(value)
    return self:setF32(0x60, value)
end
function PlayRegionParam:getPosZ(value)
    return self:getF32(0x60, value)
end

function PlayRegionParam:setBreakInLimitEventFlagId_1(value)
    return self:setU32(0x64, value)
end
function PlayRegionParam:getBreakInLimitEventFlagId_1(value)
    return self:getU32(0x64, value)
end

function PlayRegionParam:setWhiteSignLimitEventFlagId_1(value)
    return self:setU32(0x68, value)
end
function PlayRegionParam:getWhiteSignLimitEventFlagId_1(value)
    return self:getU32(0x68, value)
end

function PlayRegionParam:setMatchAreaSignCreateLimitEventFlagId(value)
    return self:setU32(0x6C, value)
end
function PlayRegionParam:getMatchAreaSignCreateLimitEventFlagId(value)
    return self:getU32(0x6C, value)
end

function PlayRegionParam:setSignAimId_1(value)
    return self:setU32(0x70, value)
end
function PlayRegionParam:getSignAimId_1(value)
    return self:getU32(0x70, value)
end

function PlayRegionParam:setSignAimId_2(value)
    return self:setU32(0x74, value)
end
function PlayRegionParam:getSignAimId_2(value)
    return self:getU32(0x74, value)
end

function PlayRegionParam:setSignAimId_3(value)
    return self:setU32(0x78, value)
end
function PlayRegionParam:getSignAimId_3(value)
    return self:getU32(0x78, value)
end

function PlayRegionParam:setSignAimId_4(value)
    return self:setU32(0x7C, value)
end
function PlayRegionParam:getSignAimId_4(value)
    return self:getU32(0x7C, value)
end

function PlayRegionParam:setSignAimId_5(value)
    return self:setU32(0x80, value)
end
function PlayRegionParam:getSignAimId_5(value)
    return self:getU32(0x80, value)
end

function PlayRegionParam:setSignAimId_6(value)
    return self:setU32(0x84, value)
end
function PlayRegionParam:getSignAimId_6(value)
    return self:getU32(0x84, value)
end

function PlayRegionParam:setSignAimId_7(value)
    return self:setU32(0x88, value)
end
function PlayRegionParam:getSignAimId_7(value)
    return self:getU32(0x88, value)
end

function PlayRegionParam:setSignAimId_8(value)
    return self:setU32(0x8C, value)
end
function PlayRegionParam:getSignAimId_8(value)
    return self:getU32(0x8C, value)
end

function PlayRegionParam:setRedSignLimitEventFlagId_1(value)
    return self:setU32(0x90, value)
end
function PlayRegionParam:getRedSignLimitEventFlagId_1(value)
    return self:getU32(0x90, value)
end

function PlayRegionParam:setBreakInLimitEventFlagId_2(value)
    return self:setU32(0x94, value)
end
function PlayRegionParam:getBreakInLimitEventFlagId_2(value)
    return self:getU32(0x94, value)
end

function PlayRegionParam:setBreakInLimitEventFlagId_3(value)
    return self:setU32(0x98, value)
end
function PlayRegionParam:getBreakInLimitEventFlagId_3(value)
    return self:getU32(0x98, value)
end

function PlayRegionParam:setWhiteSignLimitEventFlagId_2(value)
    return self:setU32(0x9C, value)
end
function PlayRegionParam:getWhiteSignLimitEventFlagId_2(value)
    return self:getU32(0x9C, value)
end

function PlayRegionParam:setWhiteSignLimitEventFlagId_3(value)
    return self:setU32(0xA0, value)
end
function PlayRegionParam:getWhiteSignLimitEventFlagId_3(value)
    return self:getU32(0xA0, value)
end

function PlayRegionParam:setRedSignLimitEventFlagId_2(value)
    return self:setU32(0xA4, value)
end
function PlayRegionParam:getRedSignLimitEventFlagId_2(value)
    return self:getU32(0xA4, value)
end

function PlayRegionParam:setRedSignLimitEventFlagId_3(value)
    return self:setU32(0xA8, value)
end
function PlayRegionParam:getRedSignLimitEventFlagId_3(value)
    return self:getU32(0xA8, value)
end

function PlayRegionParam:setBossId_1(value)
    return self:setU32(0xAC, value)
end
function PlayRegionParam:getBossId_1(value)
    return self:getU32(0xAC, value)
end

function PlayRegionParam:setBossId_2(value)
    return self:setU32(0xB0, value)
end
function PlayRegionParam:getBossId_2(value)
    return self:getU32(0xB0, value)
end

function PlayRegionParam:setBossId_3(value)
    return self:setU32(0xB4, value)
end
function PlayRegionParam:getBossId_3(value)
    return self:getU32(0xB4, value)
end

function PlayRegionParam:setBossId_4(value)
    return self:setU32(0xB8, value)
end
function PlayRegionParam:getBossId_4(value)
    return self:getU32(0xB8, value)
end

function PlayRegionParam:setBossId_5(value)
    return self:setU32(0xBC, value)
end
function PlayRegionParam:getBossId_5(value)
    return self:getU32(0xBC, value)
end

function PlayRegionParam:setBossId_6(value)
    return self:setU32(0xC0, value)
end
function PlayRegionParam:getBossId_6(value)
    return self:getU32(0xC0, value)
end

function PlayRegionParam:setBossId_7(value)
    return self:setU32(0xC4, value)
end
function PlayRegionParam:getBossId_7(value)
    return self:getU32(0xC4, value)
end

function PlayRegionParam:setBossId_8(value)
    return self:setU32(0xC8, value)
end
function PlayRegionParam:getBossId_8(value)
    return self:getU32(0xC8, value)
end

function PlayRegionParam:setBossId_9(value)
    return self:setU32(0xCC, value)
end
function PlayRegionParam:getBossId_9(value)
    return self:getU32(0xCC, value)
end

function PlayRegionParam:setBossId_10(value)
    return self:setU32(0xD0, value)
end
function PlayRegionParam:getBossId_10(value)
    return self:getU32(0xD0, value)
end

function PlayRegionParam:setBossId_11(value)
    return self:setU32(0xD4, value)
end
function PlayRegionParam:getBossId_11(value)
    return self:getU32(0xD4, value)
end

function PlayRegionParam:setBossId_12(value)
    return self:setU32(0xD8, value)
end
function PlayRegionParam:getBossId_12(value)
    return self:getU32(0xD8, value)
end

function PlayRegionParam:setBossId_13(value)
    return self:setU32(0xDC, value)
end
function PlayRegionParam:getBossId_13(value)
    return self:getU32(0xDC, value)
end

function PlayRegionParam:setBossId_14(value)
    return self:setU32(0xE0, value)
end
function PlayRegionParam:getBossId_14(value)
    return self:getU32(0xE0, value)
end

function PlayRegionParam:setBossId_15(value)
    return self:setU32(0xE4, value)
end
function PlayRegionParam:getBossId_15(value)
    return self:getU32(0xE4, value)
end

function PlayRegionParam:setBossId_16(value)
    return self:setU32(0xE8, value)
end
function PlayRegionParam:getBossId_16(value)
    return self:getU32(0xE8, value)
end

function PlayRegionParam:setMapMenuUnlockEventId(value)
    return self:setU32(0xEC, value)
end
function PlayRegionParam:getMapMenuUnlockEventId(value)
    return self:getU32(0xEC, value)
end

--dummy8 pad5[32]
[disable]
PlayRegionParam = nil
