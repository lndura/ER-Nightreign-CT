{$lua}
if syntaxcheck then return end
[enable]
AutoCreateEnvSoundParam = {}
function AutoCreateEnvSoundParam:new(id_or_all, patchName)
    return paramPatcher(self, "AutoCreateEnvSoundParam", 0x24, id_or_all, patchName)
end



function AutoCreateEnvSoundParam:setRangeMin(value)
    return self:setF32(0x00, value)
end
function AutoCreateEnvSoundParam:getRangeMin(value)
    return self:getF32(0x00, value)
end

function AutoCreateEnvSoundParam:setRangeMax(value)
    return self:setF32(0x04, value)
end
function AutoCreateEnvSoundParam:getRangeMax(value)
    return self:getF32(0x04, value)
end

function AutoCreateEnvSoundParam:setLifeTimeMin(value)
    return self:setF32(0x08, value)
end
function AutoCreateEnvSoundParam:getLifeTimeMin(value)
    return self:getF32(0x08, value)
end

function AutoCreateEnvSoundParam:setLifeTimeMax(value)
    return self:setF32(0x0C, value)
end
function AutoCreateEnvSoundParam:getLifeTimeMax(value)
    return self:getF32(0x0C, value)
end

function AutoCreateEnvSoundParam:setDeleteDist(value)
    return self:setF32(0x10, value)
end
function AutoCreateEnvSoundParam:getDeleteDist(value)
    return self:getF32(0x10, value)
end

function AutoCreateEnvSoundParam:setNearDist(value)
    return self:setF32(0x14, value)
end
function AutoCreateEnvSoundParam:getNearDist(value)
    return self:getF32(0x14, value)
end

function AutoCreateEnvSoundParam:setLimiteRotateMin(value)
    return self:setF32(0x18, value)
end
function AutoCreateEnvSoundParam:getLimiteRotateMin(value)
    return self:getF32(0x18, value)
end

function AutoCreateEnvSoundParam:setLimiteRotateMax(value)
    return self:setF32(0x1C, value)
end
function AutoCreateEnvSoundParam:getLimiteRotateMax(value)
    return self:getF32(0x1C, value)
end
[disable]
AutoCreateEnvSoundParam = nil
