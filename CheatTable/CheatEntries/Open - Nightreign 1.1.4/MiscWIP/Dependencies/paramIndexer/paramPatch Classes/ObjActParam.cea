{$lua}
if syntaxcheck then return end
[enable]
ObjActParam = {}
function ObjActParam:new(id_or_all, patchName)
    return paramPatcher(self, "ObjActParam", 0x61, id_or_all, patchName)
end



function ObjActParam:setActionEnableMsgId(value)
    return self:setU32(0x00, value)
end
function ObjActParam:getActionEnableMsgId(value)
    return self:getU32(0x00, value)
end

function ObjActParam:setActionFailedMsgId(value)
    return self:setU32(0x04, value)
end
function ObjActParam:getActionFailedMsgId(value)
    return self:getU32(0x04, value)
end

function ObjActParam:setSpQualifiedPassEventFlag(value)
    return self:setU32(0x08, value)
end
function ObjActParam:getSpQualifiedPassEventFlag(value)
    return self:getU32(0x08, value)
end

function ObjActParam:setPlayerAnimId(value)
    return self:setU32(0x0C, value)
end
function ObjActParam:getPlayerAnimId(value)
    return self:getU32(0x0C, value)
end

function ObjActParam:setChrAnimId(value)
    return self:setU32(0x10, value)
end
function ObjActParam:getChrAnimId(value)
    return self:getU32(0x10, value)
end

function ObjActParam:setValidDist(value)
    return self:setU16(0x14, value)
end
function ObjActParam:getValidDist(value)
    return self:getU16(0x14, value)
end

function ObjActParam:setSpQualifiedId_old(value)
    return self:setU16(0x16, value)
end
function ObjActParam:getSpQualifiedId_old(value)
    return self:getU16(0x16, value)
end

function ObjActParam:setSpQualifiedId2_old(value)
    return self:setU16(0x18, value)
end
function ObjActParam:getSpQualifiedId2_old(value)
    return self:getU16(0x18, value)
end

function ObjActParam:setObjDummyId(value)
    return self:setU8(0x1A, value)
end
function ObjActParam:getObjDummyId(value)
    return self:getU8(0x1A, value)
end

function ObjActParam:setIsEventKickSync(value)
    return self:setU8(0x1B, value)
end
function ObjActParam:getIsEventKickSync(value)
    return self:getU8(0x1B, value)
end

function ObjActParam:setObjAnimId(value)
    return self:setU32(0x1C, value)
end
function ObjActParam:getObjAnimId(value)
    return self:getU32(0x1C, value)
end

function ObjActParam:setValidPlayerAngle(value)
    return self:setU8(0x20, value)
end
function ObjActParam:getValidPlayerAngle(value)
    return self:getU8(0x20, value)
end

function ObjActParam:setSpQualifiedType(value)
    return self:setU8(0x21, value)
end
function ObjActParam:getSpQualifiedType(value)
    return self:getU8(0x21, value)
end

function ObjActParam:setSpQualifiedType2(value)
    return self:setU8(0x22, value)
end
function ObjActParam:getSpQualifiedType2(value)
    return self:getU8(0x22, value)
end

function ObjActParam:setValidObjAngle(value)
    return self:setU8(0x23, value)
end
function ObjActParam:getValidObjAngle(value)
    return self:getU8(0x23, value)
end

function ObjActParam:setChrSorbType(value)
    return self:setU8(0x24, value)
end
function ObjActParam:getChrSorbType(value)
    return self:getU8(0x24, value)
end

function ObjActParam:setEventKickTiming(value)
    return self:setU8(0x25, value)
end
function ObjActParam:getEventKickTiming(value)
    return self:getU8(0x25, value)
end

--dummy8 pad1[2]

function ObjActParam:setActionButtonParamId(value)
    return self:setU32(0x28, value)
end
function ObjActParam:getActionButtonParamId(value)
    return self:getU32(0x28, value)
end

function ObjActParam:setEnableTreasureDelaySec(value)
    return self:setF32(0x2C, value)
end
function ObjActParam:getEnableTreasureDelaySec(value)
    return self:getF32(0x2C, value)
end

function ObjActParam:setPreActionSfxDmypolyId(value)
    return self:setU32(0x30, value)
end
function ObjActParam:getPreActionSfxDmypolyId(value)
    return self:getU32(0x30, value)
end

function ObjActParam:setPreActionSfxId(value)
    return self:setU32(0x34, value)
end
function ObjActParam:getPreActionSfxId(value)
    return self:getU32(0x34, value)
end

--dummy8 pad2_old[40]
[disable]
ObjActParam = nil
