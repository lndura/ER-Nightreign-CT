{$lua}
if syntaxcheck then return end
[enable]
Magic = {}
function Magic:new(id_or_all, patchName)
    return paramPatcher(self, "Magic", 0xB0, id_or_all, patchName)
end



function Magic:setDisableParam_NT(value)
    return self:setBinary(0x00, 0, value, 1)
end

function Magic:getDisableParam_NT()
    return self:getBinary(0x00, 0, value, 1)
end

--dummy8 disableParamReserve1:7

--dummy8 disableParamReserve2[3]

function Magic:setYesNoDialogMessageId(value)
    return self:setU32(0x04, value)
end
function Magic:getYesNoDialogMessageId(value)
    return self:getU32(0x04, value)
end

function Magic:setLimitCancelSpEffectId(value)
    return self:setU32(0x08, value)
end
function Magic:getLimitCancelSpEffectId(value)
    return self:getU32(0x08, value)
end

function Magic:setSortId(value)
    return self:setU16(0x0C, value)
end
function Magic:getSortId(value)
    return self:getU16(0x0C, value)
end

function Magic:setRequirementLuck(value)
    return self:setU8(0x0E, value)
end
function Magic:getRequirementLuck(value)
    return self:getU8(0x0E, value)
end

function Magic:setAiNotifyType(value)
    return self:setU8(0x0F, value)
end
function Magic:getAiNotifyType(value)
    return self:getU8(0x0F, value)
end

function Magic:setMp(value)
    return self:setU16(0x10, value)
end
function Magic:getMp(value)
    return self:getU16(0x10, value)
end

function Magic:setStamina(value)
    return self:setU16(0x12, value)
end
function Magic:getStamina(value)
    return self:getU16(0x12, value)
end

function Magic:setIconId(value)
    return self:setU16(0x14, value)
end
function Magic:getIconId(value)
    return self:getU16(0x14, value)
end

function Magic:setBehaviorId(value)
    return self:setU16(0x16, value)
end
function Magic:getBehaviorId(value)
    return self:getU16(0x16, value)
end

function Magic:setMtrlItemId(value)
    return self:setU16(0x18, value)
end
function Magic:getMtrlItemId(value)
    return self:getU16(0x18, value)
end

function Magic:setReplaceMagicId(value)
    return self:setU16(0x1A, value)
end
function Magic:getReplaceMagicId(value)
    return self:getU16(0x1A, value)
end

function Magic:setMaxQuantity(value)
    return self:setU16(0x1C, value)
end
function Magic:getMaxQuantity(value)
    return self:getU16(0x1C, value)
end

function Magic:setRefCategory1(value)
    return self:setU8(0x1E, value)
end
function Magic:getRefCategory1(value)
    return self:getU8(0x1E, value)
end

function Magic:setOverDexterity(value)
    return self:setU8(0x1F, value)
end
function Magic:getOverDexterity(value)
    return self:getU8(0x1F, value)
end

function Magic:setRefCategory2(value)
    return self:setU8(0x20, value)
end
function Magic:getRefCategory2(value)
    return self:getU8(0x20, value)
end

function Magic:setSlotLength(value)
    return self:setU8(0x21, value)
end
function Magic:getSlotLength(value)
    return self:getU8(0x21, value)
end

function Magic:setRequirementIntellect(value)
    return self:setU8(0x22, value)
end
function Magic:getRequirementIntellect(value)
    return self:getU8(0x22, value)
end

function Magic:setRequirementFaith(value)
    return self:setU8(0x23, value)
end
function Magic:getRequirementFaith(value)
    return self:getU8(0x23, value)
end

function Magic:setAnalogDexterityMin(value)
    return self:setU8(0x24, value)
end
function Magic:getAnalogDexterityMin(value)
    return self:getU8(0x24, value)
end

function Magic:setAnalogDexterityMax(value)
    return self:setU8(0x25, value)
end
function Magic:getAnalogDexterityMax(value)
    return self:getU8(0x25, value)
end

function Magic:setEzStateBehaviorType(value)
    return self:setU8(0x26, value)
end
function Magic:getEzStateBehaviorType(value)
    return self:getU8(0x26, value)
end

function Magic:setRefCategory3(value)
    return self:setU8(0x27, value)
end
function Magic:getRefCategory3(value)
    return self:getU8(0x27, value)
end

function Magic:setSpEffectCategory(value)
    return self:setU8(0x28, value)
end
function Magic:getSpEffectCategory(value)
    return self:getU8(0x28, value)
end

function Magic:setRefType(value)
    return self:setU8(0x29, value)
end
function Magic:getRefType(value)
    return self:getU8(0x29, value)
end

function Magic:setOpmeMenuType(value)
    return self:setU8(0x2A, value)
end
function Magic:getOpmeMenuType(value)
    return self:getU8(0x2A, value)
end

function Magic:setRefCategory4(value)
    return self:setU8(0x2B, value)
end
function Magic:getRefCategory4(value)
    return self:getU8(0x2B, value)
end

function Magic:setHasSpEffectType(value)
    return self:setU16(0x2C, value)
end
function Magic:getHasSpEffectType(value)
    return self:getU16(0x2C, value)
end

function Magic:setReplaceCategory(value)
    return self:setU8(0x2E, value)
end
function Magic:getReplaceCategory(value)
    return self:getU8(0x2E, value)
end

function Magic:setUseLimitCategory(value)
    return self:setU8(0x2F, value)
end
function Magic:getUseLimitCategory(value)
    return self:getU8(0x2F, value)
end

function Magic:setVowType0(value)
    return self:setBinary(0x30, 0, value, 1)
end

function Magic:getVowType0()
    return self:getBinary(0x30, 0, value, 1)
end

function Magic:setVowType1(value)
    return self:setBinary(0x30, 1, value, 1)
end

function Magic:getVowType1()
    return self:getBinary(0x30, 1, value, 1)
end

function Magic:setVowType2(value)
    return self:setBinary(0x30, 2, value, 1)
end

function Magic:getVowType2()
    return self:getBinary(0x30, 2, value, 1)
end

function Magic:setVowType3(value)
    return self:setBinary(0x30, 3, value, 1)
end

function Magic:getVowType3()
    return self:getBinary(0x30, 3, value, 1)
end

function Magic:setVowType4(value)
    return self:setBinary(0x30, 4, value, 1)
end

function Magic:getVowType4()
    return self:getBinary(0x30, 4, value, 1)
end

function Magic:setVowType5(value)
    return self:setBinary(0x30, 5, value, 1)
end

function Magic:getVowType5()
    return self:getBinary(0x30, 5, value, 1)
end

function Magic:setVowType6(value)
    return self:setBinary(0x30, 6, value, 1)
end

function Magic:getVowType6()
    return self:getBinary(0x30, 6, value, 1)
end

function Magic:setVowType7(value)
    return self:setBinary(0x30, 7, value, 1)
end

function Magic:getVowType7()
    return self:getBinary(0x30, 7, value, 1)
end

function Magic:setEnable_multi(value)
    return self:setBinary(0x31, 0, value, 1)
end

function Magic:getEnable_multi()
    return self:getBinary(0x31, 0, value, 1)
end

function Magic:setEnable_multi_only(value)
    return self:setBinary(0x31, 1, value, 1)
end

function Magic:getEnable_multi_only()
    return self:getBinary(0x31, 1, value, 1)
end

function Magic:setIsEnchant(value)
    return self:setBinary(0x31, 2, value, 1)
end

function Magic:getIsEnchant()
    return self:getBinary(0x31, 2, value, 1)
end

function Magic:setIsShieldEnchant(value)
    return self:setBinary(0x31, 3, value, 1)
end

function Magic:getIsShieldEnchant()
    return self:getBinary(0x31, 3, value, 1)
end

function Magic:setEnable_live(value)
    return self:setBinary(0x31, 4, value, 1)
end

function Magic:getEnable_live()
    return self:getBinary(0x31, 4, value, 1)
end

function Magic:setEnable_gray(value)
    return self:setBinary(0x31, 5, value, 1)
end

function Magic:getEnable_gray()
    return self:getBinary(0x31, 5, value, 1)
end

function Magic:setEnable_white(value)
    return self:setBinary(0x31, 6, value, 1)
end

function Magic:getEnable_white()
    return self:getBinary(0x31, 6, value, 1)
end

function Magic:setEnable_black(value)
    return self:setBinary(0x31, 7, value, 1)
end

function Magic:getEnable_black()
    return self:getBinary(0x31, 7, value, 1)
end

function Magic:setDisableOffline(value)
    return self:setBinary(0x32, 0, value, 1)
end

function Magic:getDisableOffline()
    return self:getBinary(0x32, 0, value, 1)
end

function Magic:setCastResonanceMagic(value)
    return self:setBinary(0x32, 1, value, 1)
end

function Magic:getCastResonanceMagic()
    return self:getBinary(0x32, 1, value, 1)
end

function Magic:setIsValidTough_ProtSADmg(value)
    return self:setBinary(0x32, 2, value, 1)
end

function Magic:getIsValidTough_ProtSADmg()
    return self:getBinary(0x32, 2, value, 1)
end

function Magic:setIsWarpMagic(value)
    return self:setBinary(0x32, 3, value, 1)
end

function Magic:getIsWarpMagic()
    return self:getBinary(0x32, 3, value, 1)
end

function Magic:setEnableRiding(value)
    return self:setBinary(0x32, 4, value, 1)
end

function Magic:getEnableRiding()
    return self:getBinary(0x32, 4, value, 1)
end

function Magic:setDisableRiding(value)
    return self:setBinary(0x32, 5, value, 1)
end

function Magic:getDisableRiding()
    return self:getBinary(0x32, 5, value, 1)
end

function Magic:setIsUseNoAttackRegion(value)
    return self:setBinary(0x32, 6, value, 1)
end

function Magic:getIsUseNoAttackRegion()
    return self:getBinary(0x32, 6, value, 1)
end

--dummy8 pad_1:1

function Magic:setVowType8(value)
    return self:setBinary(0x33, 0, value, 1)
end

function Magic:getVowType8()
    return self:getBinary(0x33, 0, value, 1)
end

function Magic:setVowType9(value)
    return self:setBinary(0x33, 1, value, 1)
end

function Magic:getVowType9()
    return self:getBinary(0x33, 1, value, 1)
end

function Magic:setVowType10(value)
    return self:setBinary(0x33, 2, value, 1)
end

function Magic:getVowType10()
    return self:getBinary(0x33, 2, value, 1)
end

function Magic:setVowType11(value)
    return self:setBinary(0x33, 3, value, 1)
end

function Magic:getVowType11()
    return self:getBinary(0x33, 3, value, 1)
end

function Magic:setVowType12(value)
    return self:setBinary(0x33, 4, value, 1)
end

function Magic:getVowType12()
    return self:getBinary(0x33, 4, value, 1)
end

function Magic:setVowType13(value)
    return self:setBinary(0x33, 5, value, 1)
end

function Magic:getVowType13()
    return self:getBinary(0x33, 5, value, 1)
end

function Magic:setVowType14(value)
    return self:setBinary(0x33, 6, value, 1)
end

function Magic:getVowType14()
    return self:getBinary(0x33, 6, value, 1)
end

function Magic:setVowType15(value)
    return self:setBinary(0x33, 7, value, 1)
end

function Magic:getVowType15()
    return self:getBinary(0x33, 7, value, 1)
end

function Magic:setCastSfxId(value)
    return self:setU32(0x34, value)
end
function Magic:getCastSfxId(value)
    return self:getU32(0x34, value)
end

function Magic:setFireSfxId(value)
    return self:setU32(0x38, value)
end
function Magic:getFireSfxId(value)
    return self:getU32(0x38, value)
end

function Magic:setEffectSfxId(value)
    return self:setU32(0x3C, value)
end
function Magic:getEffectSfxId(value)
    return self:getU32(0x3C, value)
end

function Magic:setToughnessCorrectRate(value)
    return self:setF32(0x40, value)
end
function Magic:getToughnessCorrectRate(value)
    return self:getF32(0x40, value)
end

function Magic:setReplacementStatusType(value)
    return self:setU8(0x44, value)
end
function Magic:getReplacementStatusType(value)
    return self:getU8(0x44, value)
end

function Magic:setReplacementStatus1(value)
    return self:setU8(0x45, value)
end
function Magic:getReplacementStatus1(value)
    return self:getU8(0x45, value)
end

function Magic:setReplacementStatus2(value)
    return self:setU8(0x46, value)
end
function Magic:getReplacementStatus2(value)
    return self:getU8(0x46, value)
end

function Magic:setReplacementStatus3(value)
    return self:setU8(0x47, value)
end
function Magic:getReplacementStatus3(value)
    return self:getU8(0x47, value)
end

function Magic:setReplacementStatus4(value)
    return self:setU8(0x48, value)
end
function Magic:getReplacementStatus4(value)
    return self:getU8(0x48, value)
end

function Magic:setRefCategory5(value)
    return self:setU8(0x49, value)
end
function Magic:getRefCategory5(value)
    return self:getU8(0x49, value)
end

function Magic:setConsumeSA(value)
    return self:setU16(0x4A, value)
end
function Magic:getConsumeSA(value)
    return self:getU16(0x4A, value)
end

function Magic:setReplacementMagic1(value)
    return self:setU32(0x4C, value)
end
function Magic:getReplacementMagic1(value)
    return self:getU32(0x4C, value)
end

function Magic:setReplacementMagic2(value)
    return self:setU32(0x50, value)
end
function Magic:getReplacementMagic2(value)
    return self:getU32(0x50, value)
end

function Magic:setReplacementMagic3(value)
    return self:setU32(0x54, value)
end
function Magic:getReplacementMagic3(value)
    return self:getU32(0x54, value)
end

function Magic:setReplacementMagic4(value)
    return self:setU32(0x58, value)
end
function Magic:getReplacementMagic4(value)
    return self:getU32(0x58, value)
end

function Magic:setMp_charge(value)
    return self:setU16(0x5C, value)
end
function Magic:getMp_charge(value)
    return self:getU16(0x5C, value)
end

function Magic:setStamina_charge(value)
    return self:setU16(0x5E, value)
end
function Magic:getStamina_charge(value)
    return self:getU16(0x5E, value)
end

function Magic:setCreateLimitGroupId(value)
    return self:setU8(0x60, value)
end
function Magic:getCreateLimitGroupId(value)
    return self:getU8(0x60, value)
end

function Magic:setRefCategory6(value)
    return self:setU8(0x61, value)
end
function Magic:getRefCategory6(value)
    return self:getU8(0x61, value)
end

function Magic:setSubCategory1(value)
    return self:setU8(0x62, value)
end
function Magic:getSubCategory1(value)
    return self:getU8(0x62, value)
end

function Magic:setSubCategory2(value)
    return self:setU8(0x63, value)
end
function Magic:getSubCategory2(value)
    return self:getU8(0x63, value)
end

function Magic:setRefCategory7(value)
    return self:setU8(0x64, value)
end
function Magic:getRefCategory7(value)
    return self:getU8(0x64, value)
end

function Magic:setRefCategory8(value)
    return self:setU8(0x65, value)
end
function Magic:getRefCategory8(value)
    return self:getU8(0x65, value)
end

function Magic:setRefCategory9(value)
    return self:setU8(0x66, value)
end
function Magic:getRefCategory9(value)
    return self:getU8(0x66, value)
end

function Magic:setRefCategory10(value)
    return self:setU8(0x67, value)
end
function Magic:getRefCategory10(value)
    return self:getU8(0x67, value)
end

function Magic:setRefId1(value)
    return self:setU32(0x68, value)
end
function Magic:getRefId1(value)
    return self:getU32(0x68, value)
end

function Magic:setRefId2(value)
    return self:setU32(0x6C, value)
end
function Magic:getRefId2(value)
    return self:getU32(0x6C, value)
end

function Magic:setRefId3(value)
    return self:setU32(0x70, value)
end
function Magic:getRefId3(value)
    return self:getU32(0x70, value)
end

function Magic:setAiUseJudgeId(value)
    return self:setU32(0x74, value)
end
function Magic:getAiUseJudgeId(value)
    return self:getU32(0x74, value)
end

function Magic:setRefId4(value)
    return self:setU32(0x78, value)
end
function Magic:getRefId4(value)
    return self:getU32(0x78, value)
end

function Magic:setRefId5(value)
    return self:setU32(0x7C, value)
end
function Magic:getRefId5(value)
    return self:getU32(0x7C, value)
end

function Magic:setRefId6(value)
    return self:setU32(0x80, value)
end
function Magic:getRefId6(value)
    return self:getU32(0x80, value)
end

function Magic:setRefId7(value)
    return self:setU32(0x84, value)
end
function Magic:getRefId7(value)
    return self:getU32(0x84, value)
end

function Magic:setRefId8(value)
    return self:setU32(0x88, value)
end
function Magic:getRefId8(value)
    return self:getU32(0x88, value)
end

function Magic:setRefId9(value)
    return self:setU32(0x8C, value)
end
function Magic:getRefId9(value)
    return self:getU32(0x8C, value)
end

function Magic:setRefId10(value)
    return self:setU32(0x90, value)
end
function Magic:getRefId10(value)
    return self:getU32(0x90, value)
end

function Magic:setConsumeType1(value)
    return self:setU8(0x94, value)
end
function Magic:getConsumeType1(value)
    return self:getU8(0x94, value)
end

function Magic:setConsumeType2(value)
    return self:setU8(0x95, value)
end
function Magic:getConsumeType2(value)
    return self:getU8(0x95, value)
end

function Magic:setConsumeType3(value)
    return self:setU8(0x96, value)
end
function Magic:getConsumeType3(value)
    return self:getU8(0x96, value)
end

function Magic:setConsumeType4(value)
    return self:setU8(0x97, value)
end
function Magic:getConsumeType4(value)
    return self:getU8(0x97, value)
end

function Magic:setConsumeType5(value)
    return self:setU8(0x98, value)
end
function Magic:getConsumeType5(value)
    return self:getU8(0x98, value)
end

function Magic:setConsumeType6(value)
    return self:setU8(0x99, value)
end
function Magic:getConsumeType6(value)
    return self:getU8(0x99, value)
end

function Magic:setConsumeType7(value)
    return self:setU8(0x9A, value)
end
function Magic:getConsumeType7(value)
    return self:getU8(0x9A, value)
end

function Magic:setConsumeType8(value)
    return self:setU8(0x9B, value)
end
function Magic:getConsumeType8(value)
    return self:getU8(0x9B, value)
end

function Magic:setConsumeType9(value)
    return self:setU8(0x9C, value)
end
function Magic:getConsumeType9(value)
    return self:getU8(0x9C, value)
end

function Magic:setConsumeType10(value)
    return self:setU8(0x9D, value)
end
function Magic:getConsumeType10(value)
    return self:getU8(0x9D, value)
end

function Magic:setConsumeLoopMP_forMenu(value)
    return self:setU16(0x9E, value)
end
function Magic:getConsumeLoopMP_forMenu(value)
    return self:getU16(0x9E, value)
end

function Magic:setUnknown_1(value)
    return self:setU32(0xA0, value)
end
function Magic:getUnknown_1(value)
    return self:getU32(0xA0, value)
end

function Magic:setUnknown_2(value)
    return self:setU32(0xA4, value)
end
function Magic:getUnknown_2(value)
    return self:getU32(0xA4, value)
end

function Magic:setUnknown_3(value)
    return self:setU32(0xA8, value)
end
function Magic:getUnknown_3(value)
    return self:getU32(0xA8, value)
end
[disable]
Magic = nil
