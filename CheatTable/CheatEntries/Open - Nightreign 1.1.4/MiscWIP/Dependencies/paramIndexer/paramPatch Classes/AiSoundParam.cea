{$lua}
if syntaxcheck then return end
[enable]
AiSoundParam = {}
function AiSoundParam:new(id_or_all, patchName)
    return paramPatcher(self, "AiSoundParam", 0x20, id_or_all, patchName)
end



function AiSoundParam:setRadius(value)
    return self:setF32(0x00, value)
end
function AiSoundParam:getRadius(value)
    return self:getF32(0x00, value)
end

function AiSoundParam:setLifeFrame(value)
    return self:setF32(0x04, value)
end
function AiSoundParam:getLifeFrame(value)
    return self:getF32(0x04, value)
end

function AiSoundParam:setBSpEffectEnable(value)
    return self:setU8(0x08, value)
end
function AiSoundParam:getBSpEffectEnable(value)
    return self:getU8(0x08, value)
end

function AiSoundParam:setType(value)
    return self:setU8(0x09, value)
end
function AiSoundParam:getType(value)
    return self:getU8(0x09, value)
end

function AiSoundParam:setOpposeTarget(value)
    return self:setBinary(0x0A, 0, value, 1)
end

function AiSoundParam:getOpposeTarget()
    return self:getBinary(0x0A, 0, value, 1)
end

function AiSoundParam:setFriendlyTarget(value)
    return self:setBinary(0x0A, 1, value, 1)
end

function AiSoundParam:getFriendlyTarget()
    return self:getBinary(0x0A, 1, value, 1)
end

function AiSoundParam:setSelfTarget(value)
    return self:setBinary(0x0A, 2, value, 1)
end

function AiSoundParam:getSelfTarget()
    return self:getBinary(0x0A, 2, value, 1)
end

function AiSoundParam:setDisableOnTargetPCompany(value)
    return self:setBinary(0x0A, 3, value, 1)
end

function AiSoundParam:getDisableOnTargetPCompany()
    return self:getBinary(0x0A, 3, value, 1)
end

function AiSoundParam:setRank(value)
    return self:setU8(0x0A, value)
end
function AiSoundParam:getRank(value)
    return self:getU8(0x0A, value)
end

function AiSoundParam:setForgetTime(value)
    return self:setF32(0x0B, value)
end
function AiSoundParam:getForgetTime(value)
    return self:getF32(0x0B, value)
end

function AiSoundParam:setPriority(value)
    return self:setU32(0x0F, value)
end
function AiSoundParam:getPriority(value)
    return self:getU32(0x0F, value)
end

function AiSoundParam:setSoundBehaviorId(value)
    return self:setU32(0x13, value)
end
function AiSoundParam:getSoundBehaviorId(value)
    return self:getU32(0x13, value)
end

function AiSoundParam:setAiSoundLevel(value)
    return self:setU8(0x17, value)
end
function AiSoundParam:getAiSoundLevel(value)
    return self:getU8(0x17, value)
end

function AiSoundParam:setReplaningState(value)
    return self:setU8(0x18, value)
end
function AiSoundParam:getReplaningState(value)
    return self:getU8(0x18, value)
end

--dummy8 pad1[6]
[disable]
AiSoundParam = nil
