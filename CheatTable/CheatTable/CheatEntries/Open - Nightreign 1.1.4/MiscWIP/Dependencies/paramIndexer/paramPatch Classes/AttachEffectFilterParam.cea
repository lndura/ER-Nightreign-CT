{$lua}
if syntaxcheck then return end
[enable]
AttachEffectFilterParam = {}
function AttachEffectFilterParam:new(id_or_all, patchName)
    return paramPatcher(self, "AttachEffectFilterParam", 0x18, id_or_all, patchName)
end



function AttachEffectFilterParam:setDisableParam_NT(value)
    return self:setBinary(0x00, 0, value, 1)
end

function AttachEffectFilterParam:getDisableParam_NT()
    return self:getBinary(0x00, 0, value, 1)
end

--dummy8 disableParamReserve1:7

--dummy8 disableParamReserve2[3]

function AttachEffectFilterParam:setFilterTextId(value)
    return self:setU32(0x04, value)
end
function AttachEffectFilterParam:getFilterTextId(value)
    return self:getU32(0x04, value)
end

function AttachEffectFilterParam:setAttachEffectFilterCategory(value)
    return self:setU32(0x08, value)
end
function AttachEffectFilterParam:getAttachEffectFilterCategory(value)
    return self:getU32(0x08, value)
end

function AttachEffectFilterParam:setFilterValue(value)
    return self:setU32(0x0C, value)
end
function AttachEffectFilterParam:getFilterValue(value)
    return self:getU32(0x0C, value)
end

function AttachEffectFilterParam:setEventFlagForDisplay(value)
    return self:setU32(0x10, value)
end
function AttachEffectFilterParam:getEventFlagForDisplay(value)
    return self:getU32(0x10, value)
end
[disable]
AttachEffectFilterParam = nil
