{$lua}
if syntaxcheck then return end
[enable]
MultiPlayCorrectionParam = {}
function MultiPlayCorrectionParam:new(id_or_all, patchName)
    return paramPatcher(self, "MultiPlayCorrectionParam", 0x21, id_or_all, patchName)
end



function MultiPlayCorrectionParam:setDisableParam_NT(value)
    return self:setBinary(0x00, 0, value, 1)
end

function MultiPlayCorrectionParam:getDisableParam_NT()
    return self:getBinary(0x00, 0, value, 1)
end

--dummy8 disableParamReserve1:7

--dummy8 disableParamReserve2[3]

function MultiPlayCorrectionParam:setClient1SpEffectId(value)
    return self:setU32(0x04, value)
end
function MultiPlayCorrectionParam:getClient1SpEffectId(value)
    return self:getU32(0x04, value)
end

function MultiPlayCorrectionParam:setClient2SpEffectId(value)
    return self:setU32(0x08, value)
end
function MultiPlayCorrectionParam:getClient2SpEffectId(value)
    return self:getU32(0x08, value)
end

function MultiPlayCorrectionParam:setClient3SpEffectId(value)
    return self:setU32(0x0C, value)
end
function MultiPlayCorrectionParam:getClient3SpEffectId(value)
    return self:getU32(0x0C, value)
end

function MultiPlayCorrectionParam:setBOverrideSpEffect(value)
    return self:setU8(0x10, value)
end
function MultiPlayCorrectionParam:getBOverrideSpEffect(value)
    return self:getU8(0x10, value)
end

--dummy8 pad3[15]
[disable]
MultiPlayCorrectionParam = nil
