{$lua}
if syntaxcheck then return end
[enable]
ItemTableParam = {}
function ItemTableParam:new(id_or_all, patchName)
    return paramPatcher(self, "ItemTableParam", 0x21, id_or_all, patchName)
end



function ItemTableParam:setDisableParam_NT(value)
    return self:setBinary(0x00, 0, value, 1)
end

function ItemTableParam:getDisableParam_NT()
    return self:getBinary(0x00, 0, value, 1)
end

--dummy8 disableParamReserve1:7

--dummy8 disableParamReserve2[3]

function ItemTableParam:setItemCategory(value)
    return self:setU32(0x04, value)
end
function ItemTableParam:getItemCategory(value)
    return self:getU32(0x04, value)
end

function ItemTableParam:setItemId(value)
    return self:setU32(0x08, value)
end
function ItemTableParam:getItemId(value)
    return self:getU32(0x08, value)
end

function ItemTableParam:setChanceWeight(value)
    return self:setU16(0x0C, value)
end
function ItemTableParam:getChanceWeight(value)
    return self:getU16(0x0C, value)
end

function ItemTableParam:setUnknown_4(value)
    return self:setU8(0x0E, value)
end
function ItemTableParam:getUnknown_4(value)
    return self:getU8(0x0E, value)
end

function ItemTableParam:setOnlyForClass(value)
    return self:setU8(0x0F, value)
end
function ItemTableParam:getOnlyForClass(value)
    return self:getU8(0x0F, value)
end

function ItemTableParam:setEventFlagId(value)
    return self:setU32(0x10, value)
end
function ItemTableParam:getEventFlagId(value)
    return self:getU32(0x10, value)
end

function ItemTableParam:setUnknown_6(value)
    return self:setU32(0x14, value)
end
function ItemTableParam:getUnknown_6(value)
    return self:getU32(0x14, value)
end

function ItemTableParam:setUnknown_7(value)
    return self:setU32(0x18, value)
end
function ItemTableParam:getUnknown_7(value)
    return self:getU32(0x18, value)
end

--dummy8 endPadding[4]
[disable]
ItemTableParam = nil
